syntax = "proto3";

package tensorflow;

 mport "tensorflow/core/fra work/attr_value.proto";

opt on cc_enable_arenas = true;
opt on java_outer_classna  = "KernelDefProtos";
opt on java_mult ple_f les = true;
opt on java_package = "org.tensorflow.fra work";
opt on go_package = "g hub.com/tensorflow/tensorflow/tensorflow/go/core/fra work/kernel_def_go_proto";

 ssage KernelDef {
  // Must match t  na  of an Op.
  str ng op = 1;

  // Type of dev ce t  kernel runs on.
  str ng dev ce_type = 2;

   ssage AttrConstra nt {
    // Na  of an attr from t  Op.
    str ng na  = 1;

    // A l st of values that t  kernel supports for t  attr.
    // L ke OpDef.AttrDef.allo d_values, except for kernels  nstead of Ops.
    AttrValue allo d_values = 2;
  }
  repeated AttrConstra nt constra nt = 3;

  // Na s of t  Op's  nput_/output_args that res de  n host  mory
  //  nstead of dev ce  mory.
  repeated str ng host_ mory_arg = 4;

  // T  allows exper  ntal kernels to be reg stered for an op that
  // won't be used unless t  user spec f es a "_kernel" attr w h
  // value match ng t .
  str ng label = 5;

  // Pr or  zat on of kernel amongst d fferent dev ces. By default   assu 
  // pr or y  s 0. T  h g r t  pr or y t  better. By default ( .e.  f
  // t   s not set),   prefer GPU kernels over CPU.
   nt32 pr or y = 6;
}

// A collect on of KernelDefs
 ssage KernelL st {
  repeated KernelDef kernel = 1;
}
