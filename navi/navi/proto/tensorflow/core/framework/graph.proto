syntax = "proto3";

package tensorflow;

 mport "tensorflow/core/fra work/funct on.proto";
 mport "tensorflow/core/fra work/node_def.proto";
 mport "tensorflow/core/fra work/vers ons.proto";

opt on cc_enable_arenas = true;
opt on java_outer_classna  = "GraphProtos";
opt on java_mult ple_f les = true;
opt on java_package = "org.tensorflow.fra work";
opt on go_package = "g hub.com/tensorflow/tensorflow/tensorflow/go/core/fra work/graph_go_proto";

// Represents t  graph of operat ons
 ssage GraphDef {
  repeated NodeDef node = 1;

  // Compat b l y vers ons of t  graph.  See core/publ c/vers on.h for vers on
  //  tory.  T  GraphDef vers on  s d st nct from t  TensorFlow vers on, and
  // each release of TensorFlow w ll support a range of GraphDef vers ons.
  Vers onDef vers ons = 4;

  // Deprecated s ngle vers on f eld; use vers ons above  nstead.  S nce all
  // GraphDef changes before "vers ons" was  ntroduced  re forward
  // compat ble, t  f eld  s ent rely  gnored.
   nt32 vers on = 3 [deprecated = true];

  // "l brary" prov des user-def ned funct ons.
  //
  // Nam ng:
  //   * l brary.funct on.na  are  n a flat na space.
  //     NOTE:   may need to change   to be h erarch cal to support
  //     d fferent orgs. E.g.,
  //     { "/google/nn", { ... }},
  //     { "/google/v s on", { ... }}
  //     { "/org_foo/module_bar", { ... }}
  //     map<str ng, Funct onDefL b> na d_l b;
  //   *  f node[ ].op  s t  na  of one funct on  n "l brary",
  //     node[ ]  s dee d as a funct on call. Ot rw se, node[ ].op
  //     must be a pr m  ve operat on supported by t  runt  .
  //
  //
  // Funct on call semant cs:
  //
  //   * T  callee may start execut on as soon as so  of  s  nputs
  //     are ready. T  caller may want to use Tuple()  chan sm to
  //     ensure all  nputs are ready  n t  sa  t  .
  //
  //   * T  consu r of return values may start execut ng as soon as
  //     t  return values t  consu r depends on are ready.  T 
  //     consu r may want to use Tuple()  chan sm to ensure t 
  //     consu r does not start unt l all return values of t  callee
  //     funct on are ready.
  Funct onDefL brary l brary = 2;
}
