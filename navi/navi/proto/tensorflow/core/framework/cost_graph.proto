syntax = "proto3";

package tensorflow;

 mport "tensorflow/core/fra work/tensor_shape.proto";
 mport "tensorflow/core/fra work/types.proto";

opt on cc_enable_arenas = true;
opt on java_outer_classna  = "CostGraphProtos";
opt on java_mult ple_f les = true;
opt on java_package = "org.tensorflow.fra work";
opt on go_package = "g hub.com/tensorflow/tensorflow/tensorflow/go/core/fra work/cost_graph_go_proto";

 ssage CostGraphDef {
   ssage Node {
    // T  na  of t  node. Na s are globally un que.
    str ng na  = 1;

    // T  dev ce of t  node. Can be empty  f t  node  s mapped to t 
    // default part  on or part  on ng hasn't been run yet.
    str ng dev ce = 2;

    // T   d of t  node. Node  ds are only un que  ns de a part  on.
     nt32  d = 3;

    //  nputs of t  node. T y must be executed before t  node can be
    // executed. An  nput  s a part cular output of anot r node, spec f ed
    // by t  node  d and t  output  ndex.
     ssage  nput nfo {
       nt32 preced ng_node = 1;
       nt32 preced ng_port = 2;
    }
    repeated  nput nfo  nput_ nfo = 4;

    // Outputs of t  node.
     ssage Output nfo {
       nt64 s ze = 1;
      //  f >= 0, t  output  s an al as of an  nput. Note that an al as  nput
      // may  self be an al as. T  algor hm w ll t refore need to follow
      // those po nters.
       nt64 al as_ nput_port = 2;
      TensorShapeProto shape = 3;
      DataType dtype = 4;
    }
    repeated Output nfo output_ nfo = 5;

    // Temporary  mory used by t  node.
     nt64 temporary_ mory_s ze = 6;

    // Pers stent  mory used by t  node.
     nt64 pers stent_ mory_s ze = 12;

     nt64 host_temp_ mory_s ze = 10 [deprecated = true];
     nt64 dev ce_temp_ mory_s ze = 11 [deprecated = true];
     nt64 dev ce_pers stent_ mory_s ze = 16 [deprecated = true];

    // Est mate of t  computat onal cost of t  node,  n m croseconds.
     nt64 compute_cost = 9;

    // Analyt cal est mate of t  computat onal cost of t  node,  n
    // m croseconds.
     nt64 compute_t   = 14;

    // Analyt cal est mate of t   mory access cost of t  node,  n
    // m croseconds.
     nt64  mory_t   = 15;

    //  f true, t  output  s permanent:   can't be d scarded, because t 
    // node  s part of t  "f nal output". Nodes may depend on f nal nodes.
    bool  s_f nal = 7;

    //  ds of t  control  nputs for t  node.
    repeated  nt32 control_ nput = 8;

    // Are t  costs  naccurate?
    bool  naccurate = 17;
  }
  repeated Node node = 1;

  // Total cost of t  graph, typ cally used for balanc ng dec s ons.
   ssage AggregatedCost {
    // Aggregated cost value.
    float cost = 1;

    // Aggregated cost d  ns on (e.g. ' mory', 'compute', 'network').
    str ng d  ns on = 2;
  }
  repeated AggregatedCost cost = 2;
}
