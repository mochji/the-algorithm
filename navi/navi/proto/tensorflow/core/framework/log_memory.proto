syntax = "proto3";

package tensorflow;

 mport "tensorflow/core/fra work/tensor_descr pt on.proto";

opt on cc_enable_arenas = true;
opt on java_outer_classna  = "Log moryProtos";
opt on java_mult ple_f les = true;
opt on java_package = "org.tensorflow.fra work";
opt on go_package = "g hub.com/tensorflow/tensorflow/tensorflow/go/core/fra work/log_ mory_go_proto";

 ssage  moryLogStep {
  // Process-un que step  d.
   nt64 step_ d = 1;

  // Handle descr b ng t  feeds and fetc s of t  step.
  str ng handle = 2;
}

 ssage  moryLogTensorAllocat on {
  // Process-un que step  d.
   nt64 step_ d = 1;

  // Na  of t  kernel mak ng t  allocat on as set  n GraphDef,
  // e.g., "aff ne2/  ghts/Ass gn".
  str ng kernel_na  = 2;

  // Allocated tensor deta ls.
  TensorDescr pt on tensor = 3;
}

 ssage  moryLogTensorDeallocat on {
  //  d of t  tensor buffer be ng deallocated, used to match to a
  // correspond ng allocat on.
   nt64 allocat on_ d = 1;

  // Na  of t  allocator used.
  str ng allocator_na  = 2;
}

 ssage  moryLogTensorOutput {
  // Process-un que step  d.
   nt64 step_ d = 1;

  // Na  of t  kernel produc ng an output as set  n GraphDef, e.g.,
  // "aff ne2/  ghts/Ass gn".
  str ng kernel_na  = 2;

  //  ndex of t  output be ng set.
   nt32  ndex = 3;

  // Output tensor deta ls.
  TensorDescr pt on tensor = 4;
}

 ssage  moryLogRawAllocat on {
  // Process-un que step  d.
   nt64 step_ d = 1;

  // Na  of t  operat on mak ng t  allocat on.
  str ng operat on = 2;

  // Number of bytes  n t  allocat on.
   nt64 num_bytes = 3;

  // Address of t  allocat on.
  u nt64 ptr = 4;

  //  d of t  tensor buffer be ng allocated, used to match to a
  // correspond ng deallocat on.
   nt64 allocat on_ d = 5;

  // Na  of t  allocator used.
  str ng allocator_na  = 6;
}

 ssage  moryLogRawDeallocat on {
  // Process-un que step  d.
   nt64 step_ d = 1;

  // Na  of t  operat on mak ng t  deallocat on.
  str ng operat on = 2;

  //  d of t  tensor buffer be ng deallocated, used to match to a
  // correspond ng allocat on.
   nt64 allocat on_ d = 3;

  // Na  of t  allocator used.
  str ng allocator_na  = 4;

  // True  f t  deallocat on  s queued and w ll be perfor d later,
  // e.g. for GPU lazy free ng of buffers.
  bool deferred = 5;
}
