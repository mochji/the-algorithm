syntax = "proto3";

package tensorflow;

 mport "tensorflow/core/fra work/attr_value.proto";
 mport "tensorflow/core/fra work/full_type.proto";

opt on cc_enable_arenas = true;
opt on java_outer_classna  = "NodeProto";
opt on java_mult ple_f les = true;
opt on java_package = "org.tensorflow.fra work";
opt on go_package = "g hub.com/tensorflow/tensorflow/tensorflow/go/core/fra work/node_def_go_proto";

 ssage NodeDef {
  // T  na  g ven to t  operator. Used for nam ng  nputs,
  // logg ng, v sual zat on, etc.  Un que w h n a s ngle GraphDef.
  // Must match t  regexp "[A-Za-z0-9.][A-Za-z0-9_>./]*".
  str ng na  = 1;

  // T  operat on na .  T re may be custom para ters  n attrs.
  // Op na s start ng w h an underscore are reserved for  nternal use.
  str ng op = 2;

  // Each  nput  s "node:src_output" w h "node" be ng a str ng na  and
  // "src_output"  nd cat ng wh ch output tensor to use from "node".  f
  // "src_output"  s 0 t  ":0" suff x can be om ted.  Regular  nputs
  // may opt onally be follo d by control  nputs that have t  format
  // "^node".
  repeated str ng  nput = 3;

  // A (poss bly part al) spec f cat on for t  dev ce on wh ch t 
  // node should be placed.
  // T  expected syntax for t  str ng  s as follows:
  //
  // DEV CE_SPEC ::= PART AL_SPEC
  //
  // PART AL_SPEC ::= ("/" CONSTRA NT) *
  // CONSTRA NT ::= ("job:" JOB_NAME)
  //              | ("repl ca:" [1-9][0-9]*)
  //              | ("task:" [1-9][0-9]*)
  //              | ("dev ce:" [A-Za-z]* ":" ([1-9][0-9]* | "*") )
  //
  // Val d values for t  str ng  nclude:
  // * "/job:worker/repl ca:0/task:1/dev ce:GPU:3"  (full spec f cat on)
  // * "/job:worker/dev ce:GPU:3"                   (part al spec f cat on)
  // * ""                                    (no spec f cat on)
  //
  //  f t  constra nts do not resolve to a s ngle dev ce (or  f t 
  // f eld  s empty or not present), t  runt   w ll attempt to
  // choose a dev ce automat cally.
  str ng dev ce = 4;

  // Operat on-spec f c graph-construct on-t   conf gurat on.
  // Note that t  should  nclude all attrs def ned  n t 
  // correspond ng OpDef,  nclud ng those w h a value match ng
  // t  default -- t  allows t  default to change and makes
  // NodeDefs eas er to  nterpret on t  r own.  Ho ver,  f
  // an attr w h a default  s not spec f ed  n t  l st, t 
  // default w ll be used.
  // T  "na s" (keys) must match t  regexp "[a-z][a-z0-9_]+" (and
  // one of t  na s from t  correspond ng OpDef's attr f eld).
  // T  values must have a type match ng t  correspond ng OpDef
  // attr's type f eld.
  // TODO(josh11b): Add so  examples  re show ng best pract ces.
  map<str ng, AttrValue> attr = 5;

   ssage Exper  ntalDebug nfo {
    // Opaque str ng  nserted  nto error  ssages created by t  runt  .
    //
    // T   s  ntended to store t  l st of na s of t  nodes from t 
    // or g nal graph that t  node was der ved. For example  f t  node, say
    // C, was result of a fus on of 2 nodes A and B, t n 'or g nal_node' would
    // be {A, B}. T   nformat on can be used to map errors or g nat ng at t 
    // current node to so  top level s ce code.
    repeated str ng or g nal_node_na s = 1;

    // T   s  ntended to store t  l st of na s of t  funct ons from t 
    // or g nal graph that t  node was der ved. For example  f t  node, say
    // C, was result of a fus on of node A  n funct on FA and node B  n funct on
    // FB, t n `or g nal_funcs` would be {FA, FB}.  f t  node  s  n t  top
    // level graph, t  `or g nal_func`  s empty. T   nformat on, w h t 
    // `or g nal_node_na s` can be used to map errors or g nat ng at t 
    // current ndoe to so  top level s ce code.
    repeated str ng or g nal_func_na s = 2;
  }

  // T  stores debug  nformat on assoc ated w h t  node.
  Exper  ntalDebug nfo exper  ntal_debug_ nfo = 6;

  // T  complete type of t  node. Exper  ntal and subject to change.
  // Currently, t  f eld only conta ns t  return types of t  node. That w ll
  // extend  n t  future to conta n t  ent re s gnature of t  node, as a
  // funct on type.
  FullTypeDef exper  ntal_type = 7;
}
