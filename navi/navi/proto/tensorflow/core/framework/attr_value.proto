syntax = "proto3";

package tensorflow;

 mport "tensorflow/core/fra work/tensor.proto";
 mport "tensorflow/core/fra work/tensor_shape.proto";
 mport "tensorflow/core/fra work/types.proto";

opt on cc_enable_arenas = true;
opt on java_outer_classna  = "AttrValueProtos";
opt on java_mult ple_f les = true;
opt on java_package = "org.tensorflow.fra work";
opt on go_package = "g hub.com/tensorflow/tensorflow/tensorflow/go/core/fra work/attr_value_go_proto";

// Protocol buffer represent ng t  value for an attr used to conf gure an Op.
// Com nt  nd cates t  correspond ng attr type.  Only t  f eld match ng t 
// attr type may be f lled.
 ssage AttrValue {
  // L NT. fChange
   ssage L stValue {
    repeated bytes s = 2;                        // "l st(str ng)"
    repeated  nt64   = 3 [packed = true];        // "l st( nt)"
    repeated float f = 4 [packed = true];        // "l st(float)"
    repeated bool b = 5 [packed = true];         // "l st(bool)"
    repeated DataType type = 6 [packed = true];  // "l st(type)"
    repeated TensorShapeProto shape = 7;         // "l st(shape)"
    repeated TensorProto tensor = 8;             // "l st(tensor)"
    repeated Na AttrL st func = 9;              // "l st(attr)"
  }
  // L NT.T nChange(https://www.tensorflow.org/code/tensorflow/c/c_ap .cc)

  oneof value {
    bytes s = 2;                 // "str ng"
     nt64   = 3;                 // " nt"
    float f = 4;                 // "float"
    bool b = 5;                  // "bool"
    DataType type = 6;           // "type"
    TensorShapeProto shape = 7;  // "shape"
    TensorProto tensor = 8;      // "tensor"
    L stValue l st = 1;          // any "l st(...)"

    // "func" represents a funct on. func.na   s a funct on's na  or
    // a pr m  ve op's na . func.attr.f rst  s t  na  of an attr
    // def ned for that funct on. func.attr.second  s t  value for
    // that attr  n t   nstant at on.
    Na AttrL st func = 10;

    // T   s a placeholder only used  n nodes def ned  ns de a
    // funct on.     nd cates t  attr value w ll be suppl ed w n
    // t  funct on  s  nstant ated.  For example, let us suppose a
    // node "N"  n funct on "FN". "N" has an attr "A" w h value
    // placeholder = "foo". W n FN  s  nstant ated w h attr "foo"
    // set to "bar", t   nstant ated node N's attr A w ll have been
    // g ven t  value "bar".
    str ng placeholder = 9;
  }
}

// A l st of attr na s and t  r values. T  whole l st  s attac d
// w h a str ng na .  E.g., MatMul[T=float].
 ssage Na AttrL st {
  str ng na  = 1;
  map<str ng, AttrValue> attr = 2;
}
