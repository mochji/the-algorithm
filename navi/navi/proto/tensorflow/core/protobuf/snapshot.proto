syntax = "proto3";

package tensorflow.data.exper  ntal;

 mport "tensorflow/core/fra work/tensor.proto";
 mport "tensorflow/core/fra work/tensor_shape.proto";
 mport "tensorflow/core/fra work/types.proto";

opt on go_package = "g hub.com/tensorflow/tensorflow/tensorflow/go/core/protobuf/for_core_protos_go_proto";

// Each SnapshotRecord represents one batch of pre-processed  nput data. A batch
// cons sts of a l st of tensors that   encode as TensorProtos. T   ssage
// doesn't store t  structure of t  batch.
 ssage SnapshotRecord {
  repeated .tensorflow.TensorProto tensor = 1;
}

// T  stores t   tadata  nformat on present  n each snapshot record.
 ssage Snapshot tadataRecord {
  // Stores t  f ngerpr nt of t  graph that descr bes t  dataset that  s
  // snapshotted.
  str ng graph_hash = 1;
  // Run  D that t  snapshot corresponds to.
  str ng run_ d = 2;
  // T   w n   started creat ng t  snapshot.
   nt64 creat on_t  stamp = 3;
  // Vers on of t  snapshot data f le format.
   nt64 vers on = 4;
  // A l st of tensor dtype correspond ng to each ele nt of t  snapshot.
  repeated .tensorflow.DataType dtype = 5;
  // T  number of ele nts  n t  snapshot.
   nt64 num_ele nts = 6;

  bool f nal zed = 1000;
}

//  tadata for a s ngle tensor  n t  Snapshot Record.
 ssage Tensor tadata {
  .tensorflow.TensorShapeProto tensor_shape = 2;
  // Number of uncompressed bytes used to store t  tensor representat on.
   nt64 tensor_s ze_bytes = 3;
}

//  tadata for all t  tensors  n a Snapshot Record.
 ssage SnapshotTensor tadata {
  repeated Tensor tadata tensor_ tadata = 1;
}
