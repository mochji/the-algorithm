syntax = "proto3";

package tensorflow;

 mport "tensorflow/core/protobuf/master.proto";

opt on cc_enable_arenas = true;
opt on go_package = "g hub.com/tensorflow/tensorflow/tensorflow/go/core/protobuf/for_core_protos_go_proto";

// Records t  creat on of a new replay sess on.    record t  dev ce l st ng
//  re to capture t  state of t  cluster.
 ssage NewReplaySess on {
  L stDev cesResponse dev ces = 1;
  str ng sess on_handle = 2;
}

 ssage ReplayOp {
  double start_t  _us = 31;
  double end_t  _us = 32;

  oneof op {
    CreateSess onRequest create_sess on = 1;
    ExtendSess onRequest extend_sess on = 2;
    Part alRunSetupRequest part al_run_setup = 3;
    RunStepRequest run_step = 4;
    CloseSess onRequest close_sess on = 5;
    L stDev cesRequest l st_dev ces = 6;
    ResetRequest reset_request = 7;
    MakeCallableRequest make_callable = 8;
    RunCallableRequest run_callable = 9;
    ReleaseCallableRequest release_callable = 10;
    NewReplaySess on new_replay_sess on = 11;
  }

  oneof response {
    CreateSess onResponse create_sess on_response = 21;
    ExtendSess onResponse extend_sess on_response = 22;
    Part alRunSetupResponse part al_run_setup_response = 23;
    RunStepResponse run_step_response = 24;
    CloseSess onResponse close_sess on_response = 25;
    L stDev cesResponse l st_dev ces_response = 26;
    ResetResponse reset_request_response = 27;
    MakeCallableResponse make_callable_response = 28;
    RunCallableResponse run_callable_response = 29;
    ReleaseCallableResponse release_callable_response = 30;
  }
}
