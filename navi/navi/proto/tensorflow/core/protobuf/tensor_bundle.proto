syntax = "proto3";

package tensorflow;

 mport "tensorflow/core/fra work/tensor_shape.proto";
 mport "tensorflow/core/fra work/tensor_sl ce.proto";
 mport "tensorflow/core/fra work/types.proto";
 mport "tensorflow/core/fra work/vers ons.proto";

opt on cc_enable_arenas = true;
opt on java_outer_classna  = "TensorBundleProtos";
opt on java_mult ple_f les = true;
opt on java_package = "org.tensorflow.ut l";
opt on go_package = "g hub.com/tensorflow/tensorflow/tensorflow/go/core/protobuf/for_core_protos_go_proto";

// Protos used  n t  tensor bundle module (tf/core/ut l/tensor_bundle/).

// Spec al  ader that  s assoc ated w h a bundle.
//
// TODO(zong ng,zh fengc): maybe  n t  future,   can add  nformat on about
// wh ch b nary produced t  c ckpo nt, t  stamp, etc. So t  , t se can be
// valuable debugg ng  nformat on. And  f needed, t se can be used as defens ve
//  nformat on ensur ng reader (b nary vers on) of t  c ckpo nt and t  wr er
// (b nary vers on) must match w h n certa n range, etc.
 ssage Bundle aderProto {
  // Number of data f les  n t  bundle.
   nt32 num_shards = 1;

  // An enum  nd cat ng t  end anness of t  platform that produced t 
  // bundle.  A bundle can only be read by a platform w h match ng end anness.
  // Defaults to L TTLE, as most modern platforms are l tle-end an.
  //
  // Affects t  b nary tensor data bytes only, not t   tadata  n protobufs.
  enum End anness {
    L TTLE = 0;
    B G = 1;
  }
  End anness end anness = 2;

  // Vers on ng of t  tensor bundle format.
  Vers onDef vers on = 3;
}

// Descr bes t   tadata related to a c ckpo nted tensor.
 ssage BundleEntryProto {
  // T  tensor dtype and shape.
  DataType dtype = 1;
  TensorShapeProto shape = 2;
  // T  b nary content of t  tensor l es  n:
  //   F le "shard_ d": bytes [offset, offset + s ze).
   nt32 shard_ d = 3;
   nt64 offset = 4;
   nt64 s ze = 5;

  // T  CRC32C c cksum of t  tensor bytes.
  f xed32 crc32c = 6;

  //  ff present, t  entry represents a part  oned tensor.  T  prev ous
  // f elds are  nterpreted as follows:
  //
  //   "dtype", "shape": descr be t  full tensor.
  //   "shard_ d", "offset", "s ze", "crc32c": all  GNORED.
  //      T se  nformat on for each sl ce can be looked up  n t  r own
  //      BundleEntryProto, keyed by each "sl ce_na ".
  repeated TensorSl ceProto sl ces = 7;
}
