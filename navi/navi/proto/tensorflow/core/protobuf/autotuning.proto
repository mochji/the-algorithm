// T  f le def nes protos that store t  results of autotun ng var ous
// operat ons.
//
// T y are  n proto format because   want to log t m structured. T y offer
// tre ndous stat st cal, test ng, and debugg ng value.
syntax = "proto3";

package tensorflow;

 mport "google/protobuf/any.proto";
 mport "google/protobuf/durat on.proto";
 mport "tensorflow/stream_executor/dnn.proto";

opt on go_package = "g hub.com/tensorflow/tensorflow/tensorflow/go/core/protobuf/for_core_protos_go_proto";

 ssage CudnnVers on {
   nt32 major = 1;
   nt32 m nor = 2;
   nt32 patch = 3;
}

 ssage ComputeCapab l y {
   nt32 major = 1;
   nt32 m nor = 2;
}

 ssage AutotuneResult {
  enum Fa lureK nd {
    UNKNOWN = 0;

    // Algor hm wrote  mory outs de  s output buffers.
    REDZONE_MOD F ED = 1;

    // Algor hm gave a d fferent result from a reference algor hm.
    WRONG_RESULT = 2;

    // Algor hm was rejected for fa l ng to run or for known bugs.
    D SQUAL F ED = 3;
  }

   ssage Fa lureResult {
    Fa lureK nd k nd = 1;
    str ng msg = 2;

    // For fa lure_k nd == WRONG_RESULT, t  f eld  nd cates t  reference
    // conf gurat on that   compared aga nst.
    //
    // Note that t  reference algor hm  sn't always correct.  Ho ver,
    // emp r cally  's more correct, as  's "algo 0", less fancy than t 
    // compared one.
    oneof key {
      ConvKey reference_conv = 11;
      GemmKey reference_gemm = 12;
      CudaConvPlanKey reference_cuda_conv_plan = 14;
      stream_executor.dnn.Algor hmProto reference_algor hm = 15;
    }

     nt64 buffer_address = 13;
  }

  // Legacy and unused  n new data; superseded by Algor hmProto.
   ssage ConvKey {
     nt64 algor hm = 1;
    bool tensor_ops_enabled = 2;
  }

   ssage GemmKey {
     nt64 algor hm = 1;
  }

  // Legacy and unused  n new data; superseded by Algor hmProto.
   ssage CudaConvPlanKey {
    str ng exec_plan_ d = 1;
  }

   nt64 scratch_bytes = 8;
  google.protobuf.Durat on run_t   = 9;

  Fa lureResult fa lure = 7;

  oneof key {
    ConvKey conv = 5;
    GemmKey gemm = 6;
    CudaConvPlanKey cuda_conv_plan = 15;
    stream_executor.dnn.Algor hmProto algor hm = 16;
  }

  // Next  D: 17
}

 ssage Autotun ngLog {
  google.protobuf.Any  nstr = 1;

  // Records all auto-tun ng results per algor hm.
  repeated AutotuneResult results = 2;

  CudnnVers on cudnn_vers on = 3;
  ComputeCapab l y compute_capab l y = 4;

  // stream_executor::Dev ceDescr pt on::pc _bus_ d.
  str ng dev ce_pc _bus_ d = 5;

  str ng blas_vers on = 6;

  // Next  D: 7
}
