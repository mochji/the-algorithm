// Protocol  ssages for descr b ng features for mach ne learn ng model
// tra n ng or  nference.
//
// T re are three base Feature types:
//   - bytes
//   - float
//   -  nt64
//
// A Feature conta ns L sts wh ch may hold zero or more values.  T se
// l sts are t  base values BytesL st, FloatL st,  nt64L st.
//
// Features are organ zed  nto categor es by na .  T  Features  ssage
// conta ns t  mapp ng from na  to Feature.
//
// Example Features for a mov e recom ndat on appl cat on:
//   feature {
//     key: "age"
//     value { float_l st {
//       value: 29.0
//     }}
//   }
//   feature {
//     key: "mov e"
//     value { bytes_l st {
//       value: "T  Shawshank Redempt on"
//       value: "F ght Club"
//     }}
//   }
//   feature {
//     key: "mov e_rat ngs"
//     value { float_l st {
//       value: 9.0
//       value: 9.7
//     }}
//   }
//   feature {
//     key: "suggest on"
//     value { bytes_l st {
//       value: " ncept on"
//     }}
//   }
//   feature {
//     key: "suggest on_purchased"
//     value {  nt64_l st {
//       value: 1
//     }}
//   }
//   feature {
//     key: "purchase_pr ce"
//     value { float_l st {
//       value: 9.99
//     }}
//   }
//

syntax = "proto3";

package tensorflow;

opt on cc_enable_arenas = true;
opt on java_outer_classna  = "FeatureProtos";
opt on java_mult ple_f les = true;
opt on java_package = "org.tensorflow.example";
opt on go_package = "g hub.com/tensorflow/tensorflow/tensorflow/go/core/example";

// L NT. fChange
// Conta ners to hold repeated funda ntal values.
 ssage BytesL st {
  repeated bytes value = 1;
}
 ssage FloatL st {
  repeated float value = 1 [packed = true];
}
 ssage  nt64L st {
  repeated  nt64 value = 1 [packed = true];
}

// Conta ners for non-sequent al data.
 ssage Feature {
  // Each feature can be exactly one k nd.
  oneof k nd {
    BytesL st bytes_l st = 1;
    FloatL st float_l st = 2;
     nt64L st  nt64_l st = 3;
  }
}

 ssage Features {
  // Map from feature na  to feature.
  map<str ng, Feature> feature = 1;
}

// Conta ners for sequent al data.
//
// A FeatureL st conta ns l sts of Features.  T se may hold zero or more
// Feature values.
//
// FeatureL sts are organ zed  nto categor es by na .  T  FeatureL sts  ssage
// conta ns t  mapp ng from na  to FeatureL st.
//
 ssage FeatureL st {
  repeated Feature feature = 1;
}

 ssage FeatureL sts {
  // Map from feature na  to feature l st.
  map<str ng, FeatureL st> feature_l st = 1;
}
// L NT.T nChange(
//     https://www.tensorflow.org/code/tensorflow/python/tra n ng/tra n ng.py)
