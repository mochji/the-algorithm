// T  f le conta ns  ssages for var ous mach ne learn ng  nferences
// such as regress on and class f cat on.
//
//  n many appl cat ons more than one type of  nference  s des red for a s ngle
//  nput.  For example, g ven  teorolog c data an appl cat on may want to
// perform a class f cat on to determ ne  f   should expect ra n, snow or sun
// and also perform a regress on to pred ct t  temperature.
// Shar ng t  s ngle  nput data bet en two  nference tasks can be accompl s d
// us ng Mult  nferenceRequest and Mult  nferenceResponse.

syntax = "proto3";

opt on cc_enable_arenas = true;

 mport "tensorflow_serv ng/ap s/class f cat on.proto";
 mport "tensorflow_serv ng/ap s/ nput.proto";
 mport "tensorflow_serv ng/ap s/model.proto";
 mport "tensorflow_serv ng/ap s/regress on.proto";

package tensorflow.serv ng;

//  nference request such as class f cat on, regress on, etc...
 ssage  nferenceTask {
  // Model Spec f cat on.  f vers on  s not spec f ed, w ll use t  latest
  // (nu r cal) vers on.
  // All ModelSpecs  n a Mult  nferenceRequest must access t  sa  model na .
  ModelSpec model_spec = 1;

  // S gnature's  thod_na . Should be one of t   thod na s def ned  n
  // th rd_party/tensorflow/python/saved_model/s gnature_constants.py.
  // e.g. "tensorflow/serv ng/class fy".
  str ng  thod_na  = 2;
}

//  nference result, matc s t  type of request or  s an error.
 ssage  nferenceResult {
  ModelSpec model_spec = 1;

  oneof result {
    Class f cat onResult class f cat on_result = 2;
    Regress onResult regress on_result = 3;
  }
}

//  nference request conta n ng one or more requests.
 ssage Mult  nferenceRequest {
  //  nference tasks.
  repeated  nferenceTask tasks = 1;

  //  nput data.
   nput  nput = 2;
}

//  nference request conta n ng one or more responses.
 ssage Mult  nferenceResponse {
  // L st of results; one for each  nferenceTask  n t  request, returned  n t 
  // sa  order as t  request.
  repeated  nferenceResult results = 1;
}
