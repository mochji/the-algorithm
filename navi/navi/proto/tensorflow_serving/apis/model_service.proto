syntax = "proto3";

opt on cc_enable_arenas = true;

 mport "tensorflow_serv ng/ap s/get_model_status.proto";
 mport "tensorflow_serv ng/ap s/model_manage nt.proto";

package tensorflow.serv ng;

// ModelServ ce prov des  thods to query and update t  state of t  server,
// e.g. wh ch models/vers ons are be ng served.
serv ce ModelServ ce {
  // Gets status of model.  f t  ModelSpec  n t  request does not spec fy
  // vers on,  nformat on about all vers ons of t  model w ll be returned.  f
  // t  ModelSpec  n t  request does spec fy a vers on, t  status of only
  // that vers on w ll be returned.
  rpc GetModelStatus(GetModelStatusRequest) returns (GetModelStatusResponse);

  // Reloads t  set of served models. T  new conf g supersedes t  old one,
  // so  f a model  s om ted from t  new conf g   w ll be unloaded and no
  // longer served.
  rpc HandleReloadConf gRequest(ReloadConf gRequest)
      returns (ReloadConf gResponse);
}
