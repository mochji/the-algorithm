syntax = "proto3";

package tensorflow.serv ng;

 mport "google/protobuf/any.proto";
 mport "tensorflow_serv ng/conf g/f le_system_storage_path_s ce.proto";
 mport "tensorflow_serv ng/conf g/logg ng_conf g.proto";

opt on cc_enable_arenas = true;

// T  type of model.
// TODO(b/31336131): DEPRECATED.
enum ModelType {
  MODEL_TYPE_UNSPEC F ED = 0 [deprecated = true];
  TENSORFLOW = 1 [deprecated = true];
  OTHER = 2 [deprecated = true];
}

// Common conf gurat on for load ng a model be ng served.
 ssage ModelConf g {
  // Na  of t  model.
  str ng na  = 1;

  // Base path to t  model, exclud ng t  vers on d rectory.
  // E.g> for a model at /foo/bar/ _model/123, w re 123  s t  vers on, t 
  // base path  s /foo/bar/ _model.
  //
  // (T  can be changed once a model  s  n serv ng, * f* t  underly ng data
  // rema ns t  sa . Ot rw se t re are no guarantees about w t r t  old
  // or new data w ll be used for model vers ons currently loaded.)
  str ng base_path = 2;

  // Type of model.
  // TODO(b/31336131): DEPRECATED. Please use 'model_platform'  nstead.
  ModelType model_type = 3 [deprecated = true];

  // Type of model (e.g. "tensorflow").
  //
  // (T  cannot be changed once a model  s  n serv ng.)
  str ng model_platform = 4;

  reserved 5, 9;

  // Vers on pol cy for t  model  nd cat ng wh ch vers on(s) of t  model to
  // load and make ava lable for serv ng s multaneously.
  // T  default opt on  s to serve only t  latest vers on of t  model.
  //
  // (T  can be changed once a model  s  n serv ng.)
  F leSystemStoragePathS ceConf g.ServableVers onPol cy model_vers on_pol cy =
      7;

  // Str ng labels to assoc ate w h vers ons of t  model, allow ng  nference
  // quer es to refer to vers ons by label  nstead of number. Mult ple labels
  // can map to t  sa  vers on, but not v ce-versa.
  //
  // An env s oned use-case for t se labels  s canary ng tentat ve vers ons.
  // For example, one can ass gn labels "stable" and "canary" to two spec f c
  // vers ons. Perhaps  n  ally "stable"  s ass gned to vers on 0 and "canary"
  // to vers on 1. Once vers on 1 passes canary, one can sh ft t  "stable"
  // label to refer to vers on 1 (at that po nt both labels map to t  sa 
  // vers on -- vers on 1 -- wh ch  s f ne). Later once vers on 2  s ready to
  // canary one can move t  "canary" label to vers on 2. And so on.
  map<str ng,  nt64> vers on_labels = 8;

  // Conf gures logg ng requests and responses, to t  model.
  //
  // (T  can be changed once a model  s  n serv ng.)
  Logg ngConf g logg ng_conf g = 6;
}

// Stat c l st of models to be loaded for serv ng.
 ssage ModelConf gL st {
  repeated ModelConf g conf g = 1;
}

// ModelServer conf g.
 ssage ModelServerConf g {
  // ModelServer takes e  r a stat c f le-based model conf g l st or an Any
  // proto represent ng custom model conf g that  s fetc d dynam cally at
  // runt   (through network RPC, custom serv ce, etc.).
  oneof conf g {
    ModelConf gL st model_conf g_l st = 1;
    google.protobuf.Any custom_model_conf g = 2;
  }
}
