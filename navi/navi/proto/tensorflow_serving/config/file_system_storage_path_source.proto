syntax = "proto3";

package tensorflow.serv ng;

// Conf g proto for F leSystemStoragePathS ce.
 ssage F leSystemStoragePathS ceConf g {
  // A pol cy that d ctates wh ch vers on(s) of a servable should be served.
   ssage ServableVers onPol cy {
    // Serve t  latest vers ons ( .e. t  ones w h t  h g st vers on
    // numbers), among those found on d sk.
    //
    // T   s t  default pol cy, w h t  default number of vers ons as 1.
     ssage Latest {
      // Number of latest vers ons to serve. (T  default  s 1.)
      u nt32 num_vers ons = 1;
    }

    // Serve all vers ons found on d sk.
     ssage All {
    }

    // Serve a spec f c vers on (or set of vers ons).
    //
    // T  pol cy  s useful for roll ng back to a spec f c vers on, or for
    // canary ng a spec f c vers on wh le st ll serv ng a separate stable
    // vers on.
     ssage Spec f c {
      // T  vers on numbers to serve.
      repeated  nt64 vers ons = 1;
    }

    oneof pol cy_cho ce {
      Latest latest = 100;
      All all = 101;
      Spec f c spec f c = 102;
    }
  }

  // A servable na  and base path to look for vers ons of t  servable.
   ssage ServableToMon or {
    // T  servable na  to supply  n asp red-vers ons callback calls. Ch ld
    // paths of 'base_path' are cons dered to be vers ons of t  servable.
    str ng servable_na  = 1;

    // T  path to mon or,  .e. look for ch ld paths of t  form base_path/123.
    str ng base_path = 2;

    // T  pol cy to determ nes t  number of vers ons of t  servable to be
    // served at t  sa  t  .
    tensorflow.serv ng.F leSystemStoragePathS ceConf g.ServableVers onPol cy
        servable_vers on_pol cy = 4;

    reserved 3;  // Legacy vers on_pol cy def n  on.
  }

  // T  servables to mon or for new vers ons, and asp re.
  repeated ServableToMon or servables = 5;

  // A s ngle servable na /base_path pa r to mon or.
  // DEPRECATED: Use 'servables'  nstead.
  // TODO(b/30898016): Stop us ng t se f elds, and ult mately remove t m  re.
  str ng servable_na  = 1 [deprecated = true];
  str ng base_path = 2 [deprecated = true];

  // How long to wa  bet en f le-system poll ng to look for ch ldren of
  // 'base_path',  n seconds.
  //
  //  f set to zero, f lesystem w ll be polled exactly once.  f set to a
  // negat ve value (for test ng use only), poll ng w ll be ent rely d sabled.
   nt64 f le_system_poll_wa _seconds = 3;

  //  f true, t n F leSystemStoragePathS ce::Create() and ::UpdateConf g()
  // fa l  f, for any conf gured servables, t  f le system doesn't currently
  // conta n at least one vers on under t  base path.
  // (Ot rw se,   w ll em  a warn ng and keep p ng ng t  f le system to
  // c ck for a vers on to appear later.)
  // DEPRECATED: Use 'servable_vers ons_always_present'  nstead, wh ch  ncludes
  // t  behav or.
  // TODO(b/30898016): Remove 2019-10-31 or later.
  bool fa l_ f_zero_vers ons_at_startup = 4 [deprecated = true];

  //  f true, t  servable  s always expected to ex st on t  underly ng
  // f lesystem. F leSystemStoragePathS ce::Create() and ::UpdateConf g() w ll
  // fa l  f, for any conf gured servables, t  f le system doesn't currently
  // conta n at least one vers on under t  base path.  n add  on,  f a poll ng
  // loop f nd t  base path empty,   w ll not unload ex st ng servables.
  bool servable_vers ons_always_present = 6;
}
