<conf gurat on>
    <shutdownHook class="ch.qos.logback.core.hook.Delay ngShutdownHook"/>

    <!-- ===================================================== -->
    <!-- Serv ce Conf g -->
    <!-- ===================================================== -->
    <property na ="DEFAULT_SERV CE_PATTERN"
              value="%-16X{trace d} %-12X{cl ent d:--} %-16X{ thod} %-25logger{0} %msg"/>

    <property na ="DEFAULT_ACCESS_PATTERN"
              value="%msg"/>

    <!-- ===================================================== -->
    <!-- Common Conf g -->
    <!-- ===================================================== -->

    <!-- JUL/JDK14 to Logback br dge -->
    <contextL stener class="ch.qos.logback.class c.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextL stener>

    <!-- ====================================================================================== -->
    <!-- NOTE: T  follow ng appenders use a s mple T  BasedRoll ngPol cy conf gurat on.       -->
    <!--         may want to cons der us ng a more advanced S zeAndT  BasedRoll ngPol cy.    -->
    <!--       See: https://logback.qos.ch/manual/appenders.html#S zeAndT  BasedRoll ngPol cy  -->
    <!-- ====================================================================================== -->

    <!-- Serv ce Log (rollover da ly, keep max mum of 21 days of gz p compressed logs) -->
    <appender na ="SERV CE" class="ch.qos.logback.core.roll ng.Roll ngF leAppender">
        <f le>${log.serv ce.output}</f le>
        <roll ngPol cy class="ch.qos.logback.core.roll ng.T  BasedRoll ngPol cy">
            <!-- da ly rollover -->
            <f leNa Pattern>${log.serv ce.output}.%d.gz</f leNa Pattern>
            <!-- t  max mum total s ze of all t  log f les -->
            <totalS zeCap>3GB</totalS zeCap>
            <!-- keep max mum 21 days' worth of  tory -->
            <max tory>21</max tory>
            <clean toryOnStart>true</clean toryOnStart>
        </roll ngPol cy>
        <encoder>
            <pattern>%date %.-3level ${DEFAULT_SERV CE_PATTERN}%n</pattern>
        </encoder>
    </appender>

    <!-- Access Log (rollover da ly, keep max mum of 21 days of gz p compressed logs) -->
    <appender na ="ACCESS" class="ch.qos.logback.core.roll ng.Roll ngF leAppender">
        <f le>${log.access.output}</f le>
        <roll ngPol cy class="ch.qos.logback.core.roll ng.T  BasedRoll ngPol cy">
            <!-- da ly rollover -->
            <f leNa Pattern>${log.access.output}.%d.gz</f leNa Pattern>
            <!-- t  max mum total s ze of all t  log f les -->
            <totalS zeCap>100MB</totalS zeCap>
            <!-- keep max mum 7 days' worth of  tory -->
            <max tory>7</max tory>
            <clean toryOnStart>true</clean toryOnStart>
        </roll ngPol cy>
        <encoder>
            <pattern>${DEFAULT_ACCESS_PATTERN}%n</pattern>
        </encoder>
    </appender>

    <!--LogLens -->
    <appender na ="LOGLENS" class="com.tw ter.loglens.logback.LoglensAppender">
        <mdcAdd  onalContext>true</mdcAdd  onalContext>
        <category>${log.lens.category}</category>
        < ndex>${log.lens. ndex}</ ndex>
        <tag>${log.lens.tag}/serv ce</tag>
        <encoder>
            <pattern>%msg</pattern>
        </encoder>
    </appender>

    <!-- LogLens Access -->
    <appender na ="LOGLENS-ACCESS" class="com.tw ter.loglens.logback.LoglensAppender">
        <mdcAdd  onalContext>true</mdcAdd  onalContext>
        <category>${log.lens.category}</category>
        < ndex>${log.lens. ndex}</ ndex>
        <tag>${log.lens.tag}/access</tag>
        <encoder>
            <pattern>%msg</pattern>
        </encoder>
    </appender>

    <!-- P pel ne Execut on Logs -->
    <appender na ="ALLOW-L STED-P PEL NE-EXECUT ONS" class="ch.qos.logback.core.roll ng.Roll ngF leAppender">
        <f le>allow_l sted_p pel ne_execut ons.log</f le>
        <roll ngPol cy class="ch.qos.logback.core.roll ng.T  BasedRoll ngPol cy">
            <!-- da ly rollover -->
            <f leNa Pattern>allow_l sted_p pel ne_execut ons.log.%d.gz</f leNa Pattern>
             <!-- t  max mum total s ze of all t  log f les -->
            <totalS zeCap>100MB</totalS zeCap>
            <!-- keep max mum 7 days' worth of  tory -->
            <max tory>7</max tory>
            <clean toryOnStart>true</clean toryOnStart>
        </roll ngPol cy>
        <encoder>
            <pattern>%date %.-3level ${DEFAULT_SERV CE_PATTERN}%n</pattern>
        </encoder>
    </appender>

    <!-- ===================================================== -->
    <!-- Pr mary Async Appenders -->
    <!-- ===================================================== -->

    <property na ="async_queue_s ze" value="${queue.s ze:-50000}"/>
    <property na ="async_max_flush_t  " value="${max.flush.t  :-0}"/>

    <appender na ="ASYNC-SERV CE" class="com.tw ter. nject.logback.AsyncAppender">
        <queueS ze>${async_queue_s ze}</queueS ze>
        <maxFlushT  >${async_max_flush_t  }</maxFlushT  >
        <appender-ref ref="SERV CE"/>
    </appender>

    <appender na ="ASYNC-ACCESS" class="com.tw ter. nject.logback.AsyncAppender">
        <queueS ze>${async_queue_s ze}</queueS ze>
        <maxFlushT  >${async_max_flush_t  }</maxFlushT  >
        <appender-ref ref="ACCESS"/>
    </appender>

    <appender na ="ASYNC-ALLOW-L STED-P PEL NE-EXECUT ONS" class="com.tw ter. nject.logback.AsyncAppender">
        <queueS ze>${async_queue_s ze}</queueS ze>
        <maxFlushT  >${async_max_flush_t  }</maxFlushT  >
        <appender-ref ref="ALLOW-L STED-P PEL NE-EXECUT ONS"/>
    </appender>

    <appender na ="ASYNC-LOGLENS" class="com.tw ter. nject.logback.AsyncAppender">
        <queueS ze>${async_queue_s ze}</queueS ze>
        <maxFlushT  >${async_max_flush_t  }</maxFlushT  >
        <appender-ref ref="LOGLENS"/>
    </appender>

    <appender na ="ASYNC-LOGLENS-ACCESS" class="com.tw ter. nject.logback.AsyncAppender">
        <queueS ze>${async_queue_s ze}</queueS ze>
        <maxFlushT  >${async_max_flush_t  }</maxFlushT  >
        <appender-ref ref="LOGLENS-ACCESS"/>
    </appender>

    <!-- ===================================================== -->
    <!-- Package Conf g -->
    <!-- ===================================================== -->

    <!-- Per-Package Conf g -->
    <logger na ="com.tw ter" level=" NHER TED"/>
    <logger na ="com.tw ter.w lyns" level=" NHER TED"/>
    <logger na ="com.tw ter.conf gbus.cl ent.f le" level=" NHER TED"/>
    <logger na ="com.tw ter.f nagle.mux" level=" NHER TED"/>
    <logger na ="com.tw ter.f nagle.serverset2" level=" NHER TED"/>
    <logger na ="com.tw ter.logg ng.Scr beHandler" level=" NHER TED"/>
    <logger na ="com.tw ter.zookeeper.cl ent. nternal" level=" NHER TED"/>

    <!-- Root Conf g -->
    <!-- For all logs except access logs, d sable logg ng below log_level level by default. T  can be overr den  n t  per-package loggers, and dynam cally  n t  adm n panel of  nd v dual  nstances. -->
    <root level="${log_level:- NFO}">
        <appender-ref ref="ASYNC-SERV CE"/>
        <appender-ref ref="ASYNC-LOGLENS"/>
    </root>

    <!-- Access Logg ng -->
    <!-- Access logs are turned off by default -->
    <logger na ="com.tw ter.f natra.thr ft.f lters.AccessLogg ngF lter" level="OFF" add  v y="false">
        <appender-ref ref="ASYNC-ACCESS"/>
        <appender-ref ref="ASYNC-LOGLENS-ACCESS"/>
    </logger>

</conf gurat on>
