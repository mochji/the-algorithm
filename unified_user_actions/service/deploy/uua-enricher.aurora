 mport os
 mport  ertools
 mport subprocess
 mport math

SERV CE_NAME = 'uua-enr c r'

CPU_NUM = 3
HEAP_S ZE = 6 * GB
RAM_S ZE = 8 * GB
D SK_S ZE = 3 * GB

class Prof le(Struct):
  package = Default(Str ng, SERV CE_NAME)
  cmdl ne_flags = Default(Str ng, '')
  log_level = Default(Str ng, ' NFO')
   nstances = Default( nteger, 10)
  kafka_bootstrap_servers = Default(Str ng, '/s/kafka/blueb rd-1:kafka-tls')

res ces = Res ces(
  cpu = CPU_NUM,
  ram = RAM_S ZE,
  d sk = D SK_S ZE
)

 nstall = Packer. nstall(
  na  = '{{prof le.package}}',
  vers on = Workflows.package_vers on()
)

async_prof ler_ nstall = Packer. nstall(
  na  = 'async-prof ler',
  role = 'csl-perf',
  vers on = 'latest'
)

setup_jaas_conf g = Process(
    na            = 'setup_jaas_conf g',
    cmdl ne        = '''
    mkd r -p jaas_conf g
    echo "KafkaCl ent {
      com.sun.secur y.auth.module.Krb5Log nModule requ red
      pr nc pal=\\"d scode@TW TTER.B Z\\"
      useKeyTab=true
      storeKey=true
      keyTab=\\"/var/l b/tss/keys/fluffy/keytabs/cl ent/d scode.keytab\\"
      doNotPrompt=true;
  };" >> jaas_conf g/jaas.conf
  '''
)

ma n = JVMProcess(
  na  = SERV CE_NAME,
  jvm = Java11(
    ap                     = HEAP_S ZE,
   extra_jvm_flags =
      '-Djava.net.prefer Pv4Stack=true'

      ' -XX:+UseNUMA'
      ' -XX:+Aggress veOpts'
      ' -XX:+PerfD sableShared m' # http://www.evanjones.ca/jvm-mmap-pause.html

      ' -Dlog_level={{prof le.log_level}}'
      ' -Dlog.access.output=access.log'
      ' -Dlog.serv ce.output={{na }}.log'
      ' -Djava.secur y.auth.log n.conf g=jaas_conf g/jaas.conf'
  ),
  argu nts =
    '-jar {{na }}-b n.jar'
    ' -adm n.port=:{{t rmos.ports[ alth]}}'
    ' -kafka.bootstrap.servers={{prof le.kafka_bootstrap_servers}}'
    ' -kafka.appl cat on. d={{na }}.{{env ron nt}}'
    ' -kafka.appl cat on.num. nstances={{ nstances}}' # Used for stat c part  on ng
    ' -kafka.appl cat on.server={{ sos. nstance}}.{{na }}.{{env ron nt}}.{{role}}.serv ce.{{cluster}}.tw ter.com:80'
    ' -com.tw ter.f natra.kafkastreams.conf g.pr nc pal={{role}}'
    ' -thr ft.cl ent. d={{na }}.{{env ron nt}}'
    ' -serv ce. dent f er="{{role}}:{{na }}:{{env ron nt}}:{{cluster}}"'
    ' -local.cac .ttl.seconds=86400'
    ' -local.cac .max.s ze=400000000'
    ' {{prof le.cmdl ne_flags}}',
  res ces = res ces
)

stats = Stats(
  l brary = ' tr cs',
  port = 'adm n'
)

job_template = Serv ce(
  na  = SERV CE_NAME,
  role = 'd scode',
   nstances = '{{prof le. nstances}}',
  contact = 'd sco-data-eng@tw ter.com',
  constra nts = {'rack': 'l m :1', 'host': 'l m :1'},
  announce = Announcer(
    pr mary_port = ' alth',
    portmap = {'aurora': ' alth', 'adm n': ' alth'}
  ),
  task = Task(
    res ces = res ces,
    na  = SERV CE_NAME,
    processes = [async_prof ler_ nstall,  nstall, setup_jaas_conf g, ma n, stats],
    constra nts = order(async_prof ler_ nstall,  nstall, setup_jaas_conf g, ma n)
  ),
   alth_c ck_conf g         =  althC ckConf g(
     n  al_ nterval_secs     = 100,
     nterval_secs             = 60,
    t  out_secs              = 60,
    max_consecut ve_fa lures  = 4
  ),
  update_conf g               = UpdateConf g(
    batch_s ze                = 50,
    watch_secs                = 90,
    max_per_shard_fa lures    = 3,
    max_total_fa lures        = 0,
    rollback_on_fa lure       = False
  )
)

PRODUCT ON = Prof le(
)

STAG NG = Prof le(
  package = SERV CE_NAME+'-stag ng',
  cmdl ne_flags = '',
  kafka_bootstrap_servers = '/s/kafka/custdevel:kafka-tls'
)

DEVEL = STAG NG(
  log_level = 'DEBUG',
)


prod_job = job_template(
  t er = 'preferred',
  env ron nt = 'prod',
).b nd(prof le = PRODUCT ON)

stag ng_job = job_template(
  env ron nt = 'stag ng'
).b nd(prof le = STAG NG)

devel_job = job_template(
  env ron nt = 'devel'
).b nd(prof le = DEVEL)

jobs = []
for cluster  n ['atla', 'pdxa']:
  jobs.append(prod_job(cluster = cluster))
  jobs.append(stag ng_job(cluster = cluster))
  jobs.append(devel_job(cluster = cluster))
