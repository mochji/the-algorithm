<conf gurat on>

    <shutdownHook class="ch.qos.logback.core.hook.Delay ngShutdownHook"/>

    <!-- ===================================================== -->
    <!-- JUL to SLF4J Br dg ng -->
    <!-- ===================================================== -->
    <contextL stener class="ch.qos.logback.class c.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextL stener>

    <!-- ===================================================== -->
    <!-- Propert es -->
    <!-- ===================================================== -->
    <property na ="DEFAULT_SERV CE_PATTERN"
              value="%msg"/>

    <!-- ===================================================== -->
    <!-- Secondary Appenders -->
    <!-- ===================================================== -->

    <!-- Serv ce Log (Rollover every 50MB, max 11 logs) -->
    <appender na ="SERV CE" class="ch.qos.logback.core.roll ng.Roll ngF leAppender">
        <f le>${log.serv ce.output}</f le>
        <roll ngPol cy class="ch.qos.logback.core.roll ng.F xedW ndowRoll ngPol cy">
            <f leNa Pattern>${log.serv ce.output}.% </f leNa Pattern>
            <m n ndex>1</m n ndex>
            <max ndex>10</max ndex>
        </roll ngPol cy>
        <tr gger ngPol cy class="ch.qos.logback.core.roll ng.S zeBasedTr gger ngPol cy">
            <maxF leS ze>50MB</maxF leS ze>
        </tr gger ngPol cy>
        <encoder>
            <pattern>%date %.-3level %logger ${DEFAULT_SERV CE_PATTERN}%n</pattern>
        </encoder>
    </appender>

    <!-- LogLens -->
    <appender na ="LOGLENS" class="com.tw ter.loglens.logback.LoglensAppender">
        <mdcAdd  onalContext>false</mdcAdd  onalContext>
        < ndex>${log.lens. ndex}</ ndex>
        <tag>${log.lens.tag}/serv ce</tag>
        <encoder>
            <pattern>${DEFAULT_SERV CE_PATTERN}</pattern>
        </encoder>
    </appender>

    <!-- ===================================================== -->
    <!-- Pr mary Async Appenders -->
    <!-- ===================================================== -->

    <appender na ="ASYNC-SERV CE" class="ch.qos.logback.class c.AsyncAppender">
        <appender-ref ref="SERV CE"/>
    </appender>

    <appender na ="ASYNC-LOGLENS" class="ch.qos.logback.class c.AsyncAppender">
        <f lter class="ch.qos.logback.class c.f lter.ThresholdF lter">
            <level>WARN</level>
        </f lter>
        <appender-ref ref="LOGLENS"/>
    </appender>

    <!-- ===================================================== -->
    <!-- Package Conf g -->
    <!-- ===================================================== -->

    <!-- Root Conf g -->
    <root level="${log_level:-warn}">
        <appender-ref ref="ASYNC-SERV CE"/>
        <appender-ref ref="ASYNC-LOGLENS"/>
    </root>

    <!-- Per-Package Conf g -->
    <logger na ="com.tw ter" level=" nfo"/>
    <logger na ="com.tw ter.zookeeper.cl ent. nternal" level="warn"/>
    <logger na ="com.tw ter.zookeeper.cl ent. nternal.Cl entCnxnSocket" level="error"/>
    <logger na ="com.tw ter.logg ng.Scr beHandler" level="warn"/>
    <logger na ="com.tw ter.f natra" level=" nfo"/>

    <logger na ="org.apac .kafka" level=" nfo"/>
    <logger na ="org.apac .kafka.cl ents" level=" nfo"/>
    <logger na ="org.apac .kafka.cl ents.NetworkCl ent" level="warn"/>
    <logger na ="org.apac .kafka.cl ents.consu r. nternals" level=" nfo"/>
    <logger na ="org.apac .kafka.common.network" level="warn" />
</conf gurat on>
