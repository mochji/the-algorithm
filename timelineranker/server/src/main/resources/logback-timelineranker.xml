<conf gurat on>
  <shutdownHook class="ch.qos.logback.core.hook.Delay ngShutdownHook"/>
  <property na ="async_queue_s ze" value="${queue.s ze:-50000}"/>
  <property na ="async_max_flush_t  " value="${max.flush.t  :-0}"/>
  <property na ="SERV CE_OUTPUT" value="${log.serv ce.output:-server.log}"/>
  <property na ="DEBUG_TRANSCR PTS_OUTPUT"
            value="${log.debug_transcr pts.output:-debug_transcr pts.log}"/>
  <property na ="DEFAULT_SERV CE_PATTERN"
            value="%5p [%d{yyyyMMdd-HH:mm:ss.SSS}] %logger{0}: %m%n"/>
  <!-- JUL/JDK14 to Logback br dge -->
  <contextL stener class="ch.qos.logback.class c.jul.LevelChangePropagator">
    <resetJUL>true</resetJUL>
  </contextL stener>

  <!-- Serv ce Log -->
  <appender na ="SERV CE" class="ch.qos.logback.core.roll ng.Roll ngF leAppender">
    <f le>${SERV CE_OUTPUT}</f le>
    <roll ngPol cy class="ch.qos.logback.core.roll ng.S zeAndT  BasedRoll ngPol cy">
      <!-- da ly rollover -->
      <f leNa Pattern>${SERV CE_OUTPUT}.%d.% .gz</f leNa Pattern>
      <maxF leS ze>500MB</maxF leS ze>
      <!-- keep 21 days' worth of  tory -->
      <max tory>21</max tory>
      <clean toryOnStart>true</clean toryOnStart>
    </roll ngPol cy>
    <encoder>
      <pattern>${DEFAULT_SERV CE_PATTERN}</pattern>
    </encoder>
  </appender>

  <!-- debug transcr pts -->
  <appender na ="DEBUG-TRANSCR PTS" class="ch.qos.logback.core.roll ng.Roll ngF leAppender">
    <f le>${DEBUG_TRANSCR PTS_OUTPUT}</f le>
    <roll ngPol cy class="ch.qos.logback.core.roll ng.S zeAndT  BasedRoll ngPol cy">
      <!-- da ly rollover -->
      <f leNa Pattern>${DEBUG_TRANSCR PTS_OUTPUT}.%d.% .gz</f leNa Pattern>
      <maxF leS ze>500MB</maxF leS ze>
      <!-- keep 21 days' worth of  tory -->
      <max tory>21</max tory>
      <clean toryOnStart>true</clean toryOnStart>
    </roll ngPol cy>
    <encoder>
      <pattern>${DEFAULT_SERV CE_PATTERN}</pattern>
    </encoder>
  </appender>

  <!-- LogLens/splunk -->
  <appender na ="LOGLENS" class="com.tw ter.loglens.logback.LoglensAppender">
    <mdcAdd  onalContext>true</mdcAdd  onalContext>
    <category>loglens</category>
    < ndex>${log.lens. ndex:-t  l neranker}</ ndex>
    <tag>${log.lens.tag}</tag>
    <encoder>
      <pattern>%msg%n</pattern>
    </encoder>
    <f lter class="com.tw ter.strato.logg ng.logback.RegexF lter">
      <forLogger>manhattan-cl ent</forLogger>
      <excludeRegex>.* nval dRequest.*</excludeRegex>
    </f lter>
  </appender>

  <!-- ===================================================== -->
  <!-- Pr mary Async Appenders -->
  <!-- ===================================================== -->

  <appender na ="ASYNC-SERV CE" class="ch.qos.logback.class c.AsyncAppender">
    <queueS ze>${async_queue_s ze}</queueS ze>
    <maxFlushT  >${async_max_flush_t  }</maxFlushT  >
    <appender-ref ref="SERV CE"/>
  </appender>

  <appender na ="ASYNC-DEBUG-TRANSCR PTS" class="ch.qos.logback.class c.AsyncAppender">
    <queueS ze>${async_queue_s ze}</queueS ze>
    <maxFlushT  >${async_max_flush_t  }</maxFlushT  >
    <appender-ref ref="DEBUG-TRANSCR PTS"/>
  </appender>

  <appender na ="ASYNC-LOGLENS" class="ch.qos.logback.class c.AsyncAppender">
    <queueS ze>${async_queue_s ze}</queueS ze>
    <maxFlushT  >${async_max_flush_t  }</maxFlushT  >
    <appender-ref ref="LOGLENS"/>
  </appender>

  <!-- ===================================================== -->
  <!-- Package Conf g -->
  <!-- ===================================================== -->

  <!-- Per-Package Conf g -->
  <logger na ="Opt m st cLock ngCac " level="off"/>
  <logger na ="ZkSess on" level=" nfo"/>
  <logger na ="com.tw ter" level=" nfo"/>
  <logger na ="com.tw ter.dec der.StoreDec der" level="warn"/>
  <logger na ="com.tw ter.d str butedlog.cl ent" level="warn"/>
  <logger na ="com.tw ter.f nagle.l veness" level="warn"/>
  <logger na ="com.tw ter.f nagle.mtls.author zat on.conf g.AccessControlL stConf gurat on" level="warn"/>
  <logger na ="com.tw ter.f nagle.mux" level="warn"/>
  <logger na ="com.tw ter.f nagle.serverset2" level="warn"/>
  <logger na ="com.tw ter.f natra.kafka.common.kerberos lpers" level="warn"/>
  <logger na ="com.tw ter.f natra.kafka.ut ls.BootstrapServerUt ls" level="warn"/>
  <logger na ="com.tw ter.logg ng.Scr beHandler" level="warn"/>
  <logger na ="com.tw ter.server.coord nate" level="error"/>
  <logger na ="com.tw ter.w lyns" level="warn"/>
  <logger na ="com.tw ter.zookeeper.cl ent" level=" nfo"/>
  <logger na ="com.tw ter.zookeeper.cl ent. nternal" level="warn"/>
  <logger na ="manhattan-cl ent" level="warn"/>
  <logger na ="org.apac .kafka.cl ents.NetworkCl ent" level="error"/>
  <logger na ="org.apac .kafka.cl ents.consu r. nternals" level="error"/>
  <logger na ="org.apac .kafka.cl ents.producer. nternals" level="error"/>
  <logger na ="org.apac .kafka.common.network" level="warn"/>
  <logger na ="org.apac .zookeeper" level="error"/>
  <logger na ="org.apac .zookeeper.Cl entCnxn" level="warn"/>

  <!-- Root Conf g -->
  <root level="${log_level:- NFO}">
    <appender-ref ref="ASYNC-SERV CE"/>
    <appender-ref ref="ASYNC-LOGLENS"/>
  </root>

  <!-- debug transcr pts: logger na  MUST be c.t.t  l nes.ut l.debuglog.DebugLog.DebugTranscr ptsLog -->
  <logger na ="DebugTranscr pts" level=" nfo">
    <appender-ref ref="ASYNC-DEBUG-TRANSCR PTS"/>
    <appender-ref ref="ASYNC-LOGLENS"/>
  </logger>
</conf gurat on>
