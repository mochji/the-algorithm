scala_l brary(
    s ces = [
        "*.scala",
        "common/*.scala",
    ],
    platform = "java8",
    tags = ["bazel-compat ble"],
    dependenc es = [
        "esc rb rd/src/scala/com/tw ter/esc rb rd/scald ng/s ce",
        " nterests-ds/src/ma n/scala/com/tw ter/ nterests_ds/jobs/ nterests_serv ce",
        " nterests-ds/src/ma n/scala/com/tw ter/ nterests_ds/jobs/ nterests_serv ce:user_top c_relat on_snapshot-scala",
        "src/scala/com/tw ter/ml/featurestore/catalog/datasets/t  l nes:t  l nes-user-top c-aggregates",
        "src/scala/com/tw ter/onboard ng/relevance/s ce:utt_account_recom ndat ons-scala",
        "src/scala/com/tw ter/s mclusters_v2/hdfs_s ces",
        "src/scala/com/tw ter/s mclusters_v2/hdfs_s ces:s mclusters_v2_embedd ngs_l e-scala",
        "src/scala/com/tw ter/s mclusters_v2/hdfs_s ces:user_top c_  ghted_embedd ng-scala",
        "src/scala/com/tw ter/s mclusters_v2/hdfs_s ces/presto_hdfs_s ces",
        "src/scala/com/tw ter/s mclusters_v2/scald ng/common",
        "src/scala/com/tw ter/s mclusters_v2/scald ng/common/matr x",
        "src/scala/com/tw ter/s mclusters_v2/scald ng/embedd ng",
        "src/scala/com/tw ter/t  l nes/pred ct on/common/aggregates:user_top c_aggregates-scala",
        "src/scala/com/tw ter/wtf/ent y_real_graph/common",
        "src/scala/com/tw ter/wtf/ent y_real_graph/scald ng/common",
        "src/scala/com/tw ter/wtf/scald ng/jobs/common:execut on_app",
        "src/scala/com/tw ter/wtf/scald ng/jobs/common:s ces",
        "src/scala/com/tw ter/wtf/scald ng/jobs/common:stats_ut l",
        "t  l nes/data_process ng/ml_ut l/aggregat on_fra work:common_types",
        "t  l nes/data_process ng/ml_ut l/aggregat on_fra work/convers on",
        "t  l nes/data_process ng/ml_ut l/aggregat on_fra work/ tr cs",
        "t  l nes/data_process ng/ml_ut l/aggregat on_fra work/scald ng",
    ],
)

hadoop_b nary(
    na  = "fav_tfg_top c_embedd ngs-adhoc",
    ma n = "com.tw ter.s mclusters_v2.scald ng.embedd ng.tfg.FavTfgTop cEmbedd ngsAdhocApp",
    platform = "java8",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble",
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [":tfg"],
)

hadoop_b nary(
    na  = "fav_tfg_top c_embedd ngs_2020-adhoc",
    ma n = "com.tw ter.s mclusters_v2.scald ng.embedd ng.tfg.FavTfgTop cEmbedd ngs2020AdhocApp",
    platform = "java8",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble",
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [":tfg"],
)

hadoop_b nary(
    na  = "fav_tfg_top c_embedd ngs",
    ma n = "com.tw ter.s mclusters_v2.scald ng.embedd ng.tfg.FavTfgTop cEmbedd ngsSc duledApp",
    platform = "java8",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble",
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [":tfg"],
)

hadoop_b nary(
    na  = "fav_tfg_top c_embedd ngs_2020",
    ma n = "com.tw ter.s mclusters_v2.scald ng.embedd ng.tfg.FavTfgTop cEmbedd ngs2020Sc duledApp",
    platform = "java8",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble",
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [":tfg"],
)

hadoop_b nary(
    na  = "logfav_tfg_top c_embedd ngs-adhoc",
    ma n = "com.tw ter.s mclusters_v2.scald ng.embedd ng.tfg.LogFavTfgTop cEmbedd ngsAdhocApp",
    platform = "java8",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble",
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [":tfg"],
)

hadoop_b nary(
    na  = "logfav_tfg_top c_embedd ngs",
    ma n = "com.tw ter.s mclusters_v2.scald ng.embedd ng.tfg.LogFavTfgTop cEmbedd ngsSc duledApp",
    platform = "java8",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble",
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [":tfg"],
)

hadoop_b nary(
    na  = "fav_ nferred_lang_tfg_top c_embedd ngs-adhoc",
    ma n = "com.tw ter.s mclusters_v2.scald ng.embedd ng.tfg.Fav nferredLanguageTfgBasedTop cEmbedd ngsAdhocApp",
    platform = "java8",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble",
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [":tfg"],
)

hadoop_b nary(
    na  = "fav_ nferred_lang_tfg_top c_embedd ngs",
    ma n = "com.tw ter.s mclusters_v2.scald ng.embedd ng.tfg.Fav nferredLanguageTfgBasedTop cEmbedd ngsSc duledApp",
    platform = "java8",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble",
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [":tfg"],
)

hadoop_b nary(
    na  = "fav_tfg_top c_embedd ngs_2020_copy",
    ma n = "com.tw ter.s mclusters_v2.scald ng.embedd ng.tfg.FavTfgTop cEmbedd ngs2020CopySc duledApp",
    platform = "java8",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble",
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [":tfg"],
)

scald ng_job(
    na  = "fav_  ghted_user_top c_tfg_embedd ngs_adhoc_job",
    ma n = "com.tw ter.s mclusters_v2.scald ng.embedd ng.tfg.Engage nt  ghtedTfgBasedTop cEmbedd ngsAdhocJob",
    conf g = [
        ("hadoop.reduce.jvm.total- mory", "8192m"),
        ("hadoop.comb ne- nput", "true"),
        (
            "job.args",
            ["--date 2021-10-28"],
        ),
    ],
    hadoop_cluster = "atla-proc3",  #"qus1-blueb rd",
    platform = "java8",
    role = "cassowary",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [
        ":tfg",
    ],
)

scald ng_job(
    na  = "fav_  ghted_user_top c_tfg_embedd ngs_batch_job",
    ma n = "com.tw ter.s mclusters_v2.scald ng.embedd ng.tfg.Engage nt  ghtedTfgBasedTop cEmbedd ngsSc duleJob",
    args = [],
    conf g = [
        ("hadoop.reduce.jvm.total- mory", "8192m"),
        ("hadoop.comb ne- nput", "true"),
        ("subm ter.cluster", "atla"),
    ],
    cron = "0 1 * * *",
    hadoop_cluster = "atla-proc3",
    platform = "java8",
    role = "cassowary",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [
        ":tfg",
    ],
)
