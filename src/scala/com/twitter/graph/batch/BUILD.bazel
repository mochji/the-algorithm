JOB = ["job/**/*"]

scala_l brary(
    na  = "batch",
    s ces = ["**/*.scala"],
    platform = "java8",
    tags = [
        "bazel-compat ble",
        "bazel-only",
    ],
    dependenc es = [
        "3rdparty/jvm/cascad ng:cascad ng-core",
        "3rdparty/jvm/cascad ng:cascad ng-hadoop",
        "3rdparty/jvm/cascad ng:cascad ng-local",
        "3rdparty/jvm/cascad ng:cascad ng-thr ft",
        "3rdparty/jvm/com/tw ter/algeb rd:core",
        "3rdparty/jvm/com/tw ter/algeb rd:ut l",
        "3rdparty/jvm/com/tw ter/storehaus:algebra",
        "3rdparty/jvm/com/tw ter/storehaus:core",
        "3rdparty/src/jvm/com/tw ter/scald ng:args",
        "3rdparty/src/jvm/com/tw ter/scald ng:commons",
        "3rdparty/src/jvm/com/tw ter/scald ng:core",
        "3rdparty/src/jvm/com/tw ter/scald ng:date",
        "3rdparty/src/jvm/com/tw ter/scald ng:parquet",
        "3rdparty/src/jvm/com/tw ter/summ ngb rd:batch",
        "3rdparty/src/jvm/com/tw ter/summ ngb rd:cl ent",
        "graphstore/common:flock_follows-java",
        "src/java/com/tw ter/common_ nternal/ut l:date_ut l",
        "src/java/com/tw ter/twadoop/batch",
        "src/java/com/tw ter/twadoop/ut l/dbconf g",
        "src/java/com/tw ter/twadoop/ut l/yaml",
        "src/protobuf/com/tw ter/twadoop",
        "src/scala/com/tw ter/pluck",
        "src/scala/com/tw ter/pluck/s ce/comb ned_user_s ce",
        "src/scala/com/tw ter/pluck/s ce/jdbc",
        "src/scala/com/tw ter/scald ng_ nternal/error_handl ng",
        "src/scala/com/tw ter/scald ng_ nternal/job",
        "src/scala/com/tw ter/scald ng_ nternal/job/analyt cs_batch",
        "src/scala/com/tw ter/scald ng_ nternal/mult format",
        "src/scala/com/tw ter/scald ng_ nternal/s ce",
        "src/scala/com/tw ter/wtf/scald ng/jobs/common:date_ut l",
        "src/thr ft/com/tw ter/g zmoduck:user-thr ft-java",
        "src/thr ft/com/tw ter/twadoop/user/gen:gen-java",
        "ut l/ut l-core:scala",
    ],
)

#pants.new bu ld target for t  old "d st"
hadoop_b nary(
    na  = "graph-batch-deploy",
    ma n = "com.tw ter.scald ng.Tool",
    platform = "java8",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble",
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [
        ":t epcred",
    ],
)

# Generated w h `capesospy-v2 create_target t epcred_job sc ence/scald ng/ sos/wtf/recos_platform_atla_proc.yaml`, conf g hash d63a47.
scald ng_job(
    na  = "t epcred_job",
    ma n = "com.tw ter.graph.batch.job.t epcred.T epcredBatchJob",
    args = ["--  ghted false --hadoop_conf g /etc/hadoop/hadoop-conf-proc-atla"],
    conf g = [
        ("hadoop.comb ne- nput", "true"),
        ("hadoop.map.jvm.total- mory", "3072m"),
        ("hadoop.queue", "cassowary.default"),
        ("hadoop.reduce.jvm.total- mory", "3072m"),
        ("hadoop.reducers", "1200"),
        ("hadoop.subm ter.d sk", "200000m"),
        ("hadoop.subm ter.jvm.total- mory", "5120m"),
        ("subm ter.t er", "preempt ble"),
    ],
    cron = "24,44,04 * * * *",
    hadoop_cluster = "atla-proc",
    platform = "java8",
    role = "cassowary",
    runt  _platform = "java8",
    tags = [
        "bazel-compat ble:m grated",
        "bazel-only",
    ],
    dependenc es = [
        ":t epcred",
    ],
)
