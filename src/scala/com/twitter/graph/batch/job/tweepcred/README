T epcred

T epcred  s a soc al network analys s tool that calculates t   nfluence of Tw ter users based on t  r  nteract ons w h ot r users. T  tool uses t  PageRank algor hm to rank users based on t  r  nfluence.

PageRank Algor hm
PageRank  s a graph algor hm that was or g nally developed by Google to determ ne t   mportance of  b pages  n search results. T  algor hm works by ass gn ng a nu r cal score to each page based on t  number and qual y of ot r pages that l nk to  . T  more l nks a page has from ot r h gh-qual y pages, t  h g r  s PageRank score.

 n t  T epcred project, t  PageRank algor hm  s used to determ ne t   nfluence of Tw ter users based on t  r  nteract ons w h ot r users. T  graph  s constructed by treat ng Tw ter users as nodes, and t  r  nteract ons ( nt ons, ret ets, etc.) as edges. T  PageRank score of a user represents t  r  nfluence  n t  network.

T epcred PageRank  mple ntat on
T   mple ntat on of t  PageRank algor hm  n T epcred  s based on t  Hadoop MapReduce fra work. T  algor hm  s spl   nto two stages: preparat on and  erat on.

T  preparat on stage  nvolves construct ng t  graph of Tw ter users and t  r  nteract ons, and  n  al z ng each user's PageRank score to a default value. T  stage  s  mple nted  n t  PreparePageRankData class.

T   erat on stage  nvolves repeatedly calculat ng and updat ng t  PageRank scores of each user unt l convergence  s reac d. T  stage  s  mple nted  n t  UpdatePageRank class, wh ch  s run mult ple t  s unt l t  algor hm converges.

T  T epcred PageRank  mple ntat on also  ncludes a number of opt m zat ons to  mprove performance and reduce  mory usage. T se opt m zat ons  nclude block compress on, lazy load ng, and  n- mory cach ng.


========================================== T epcredBatchJob.scala ==========================================


T   s a Scala class that represents a batch job for comput ng t  "t epcred" (Tw ter cred b l y) score for Tw ter users us ng   ghted or un  ghted PageRank algor hm. T  class extends t  Analyt cs erat veBatchJob class, wh ch  s part of t  Scald ng fra work used for data process ng on Hadoop.

T  class def nes var ous propert es and  thods that are used to conf gure and run t  batch job. T  args para ter represents t  command-l ne argu nts that are passed to t  batch job, such as t  --  ghted flag that determ nes w t r to use t    ghted PageRank algor hm or not.

T  run  thod overr des t  run  thod of t  base class and pr nts t  batch stat st cs after t  job has f n s d. T  ch ldren  thod def nes a l st of ch ld jobs that need to be executed as part of t  batch job. T   ssage ader  thod returns a str ng that represents t   ader of t  batch job  ssage.

========================================== ExtractT epcred.scala ==========================================

T  class  s a Scald ng job that calculates "t epcred" from a g ven pagerank f le. T epcred  s a  asure of reputat on for Tw ter users that takes  nto account t  number of follo rs t y have and t  number of people t y follow.  f t  opt onal argu nt post_adjust  s set to true (default value), t n t  pagerank values are adjusted based on t  user's follo r-to-follow ng rat o.

T  class takes several command-l ne argu nts spec fy ng  nput and output f les and opt ons, and   uses t  Scald ng l brary to perform d str buted data process ng on t   nput f les.   reads  n t  pagerank f le and a user mass f le, both  n TSV format, and comb nes t m to produce a new pagerank f le w h t  adjusted values. T  adjusted pagerank  s t n used to calculate t epcred values, wh ch are wr ten to output f les.

T  code makes use of t  MostRecentComb nedUserSnapshotS ce class from t  com.tw ter.pluck.s ce.comb ned_user_s ce package to obta n user  nformat on from t  user mass f le.   also uses t  Reputat on class to perform t  t epcred calculat ons and adjust nts.


========================================== UserMass.scala ==========================================

T  UserMass class  s a  lper class used to calculate t  "mass" of a user on Tw ter, as def ned by a certa n algor hm. T  mass score represents t  user's reputat on and  s used  n var ous appl cat ons, such as  n determ n ng wh ch users should be recom nded to follow or wh ch users should have t  r content h ghl ghted.

T  getUserMass  thod of t  UserMass class takes  n a Comb nedUser object, wh ch conta ns  nformat on about a Tw ter user, and returns an opt onal UserMass nfo object, wh ch conta ns t  user's  D and calculated mass score.

T  algor hm used to calculate t  mass score takes  nto account var ous factors such as t  user's account age, number of follo rs and follow ngs, dev ce usage, and safety status (restr cted, suspended, ver f ed). T  calculat on  nvolves add ng and mult ply ng   ght factors and adjust ng t  mass score based on a threshold for t  number of fr ends and follo rs.


========================================== PreparePageRankData.scala ==========================================

T  PreparePageRankData class prepares t  graph data for t  page rank calculat on.   generates t   n  al pagerank and t n starts t    ghtedPageRank job.   has t  follow ng funct onal  es:

  reads t  user mass TSV f le generated by t  twadoop user_mass job.
  reads t  graph data, wh ch  s e  r a TSV f le or a comb nat on of flock edges and real graph  nputs for   ghts.
  generates t   n  al pagerank as t  start ng po nt for t  pagerank computat on.
  wr es t  number of nodes to a TSV f le and dumps t  nodes to anot r TSV f le.
  has several opt ons l ke   ghted, flock_edges_only, and  nput_pagerank to f ne-tune t  pagerank calculat on.
  also has opt ons for t    ghtedPageRank and ExtractT epcred jobs, l ke output_pagerank, output_t epcred, max erat ons, jumpprob, threshold, and post_adjust.
T  PreparePageRankData class has several  lper funct ons l ke getFlockEdges, getRealGraphEdges, getFlockRealGraphEdges, and getCsvEdges that read t  graph data from d fferent s ces l ke DAL,  nteract onGraph, or CSV f les.   also has t  generate n  alPagerank funct on that generates t   n  al pagerank from t  graph data.

==========================================   ghtedPageRank.scala ==========================================

  ghtedPageRank  s a class that performs t    ghted PageRank algor hm on a g ven graph.

T  algor hm starts from a g ven PageRank value and performs one  erat on, t n tests for convergence.  f convergence has not been reac d, t  algor hm clones  self and starts t  next PageRank job w h t  updated PageRank as  nput.  f convergence has been reac d, t  algor hm starts t  ExtractT epcred job  nstead.

T  class takes  n several opt ons,  nclud ng t  work ng d rectory, total number of nodes, nodes f le, PageRank f le, total d fference, w t r to perform   ghted PageRank, t  current  erat on, max mum  erat ons to run, probab l y of a random jump, and w t r to do post adjust.

T  algor hm reads a nodes f le that  ncludes t  s ce node  D, dest nat on node  Ds,   ghts, and mass pr or. T  algor hm also reads an  nput PageRank f le that  ncludes t  s ce node  D and mass  nput. T  algor hm t n performs one  erat on of t  PageRank algor hm and wr es t  output PageRank to a f le.

T  algor hm tests for convergence by calculat ng t  total d fference bet en t   nput and output PageRank masses.  f convergence has not been reac d, t  algor hm clones  self and starts t  next PageRank job.  f convergence has been reac d, t  algor hm starts t  ExtractT epcred job.

========================================== Reputat on.scala ==========================================

T   s a  lper class called Reputat on that conta ns  thods for calculat ng a user's reputat on score. T  f rst  thod called scaledReputat on takes a Double para ter raw wh ch represents t  user's page rank, and returns a Byte value that represents t  user's reputat on on a scale of 0 to 100. T   thod uses a formula that  nvolves convert ng t  logar hm of t  page rank to a number bet en 0 and 100.

T  second  thod called adjustReputat onsPostCalculat on takes three para ters: mass (a Double value represent ng t  user's page rank), numFollo rs (an  nt value represent ng t  number of follo rs a user has), and numFollow ngs (an  nt value represent ng t  number of users a user  s follow ng). T   thod reduces t  page rank of users who have a low number of follo rs but a h gh number of follow ngs.   calculates a d v s on factor based on t  rat o of follow ngs to follo rs, and reduces t  user's page rank by d v d ng   by t  factor. T   thod returns t  adjusted page rank.
