create_thr ft_l brar es(
    base_na  = " d a-ent y",
    s ces = [" d a_ent y.thr ft"],
    platform = "java8",
    tags = ["bazel-compat ble"],
    dependency_roots = [
        " d aserv ces/commons/src/ma n/thr ft",
    ],
    export_roots = [
        " d aserv ces/commons/src/ma n/thr ft:thr ft",
    ],
    generate_languages = [
        "go",
        "java",
        "lua",
        "python",
        "ruby",
        "scala",
        "strato",
    ],
    prov des_java_na  = "t etyp e- d a-ent y-thr ft-java",
    prov des_scala_na  = "t etyp e- d a-ent y-thr ft-scala",
)

create_thr ft_l brar es(
    base_na  = "ed -control",
    s ces = ["ed _control.thr ft"],
    platform = "java8",
    tags = ["bazel-compat ble"],
    generate_languages = [
        "go",
        "java",
        "lua",
        "python",
        "ruby",
        "scala",
        "strato",
    ],
    prov des_java_na  = "t etyp e-ed -control-thr ft-java",
    prov des_scala_na  = "t etyp e-ed -control-thr ft-scala",
)

create_thr ft_l brar es(
    base_na  = "ap -f elds",
    s ces = ["ap _f elds.thr ft"],
    platform = "java8",
    tags = ["bazel-compat ble"],
    generate_languages = [
        "go",
        "java",
        "lua",
        "python",
        "ruby",
        "scala",
        "strato",
    ],
    prov des_java_na  = "t etyp e-ap -f elds-thr ft-java",
    prov des_scala_na  = "t etyp e-ap -f elds-thr ft-scala",
)

create_thr ft_l brar es(
    base_na  = "note-t et",
    s ces = ["note_t et.thr ft"],
    platform = "java8",
    tags = ["bazel-compat ble"],
    generate_languages = [
        "go",
        "java",
        "lua",
        "python",
        "ruby",
        "scala",
        "strato",
    ],
    prov des_java_na  = "t etyp e-note-t et-thr ft-java",
    prov des_scala_na  = "t etyp e-note-t et-thr ft-scala",
)

create_thr ft_l brar es(
    base_na  = "t et",
    s ces = [
        "creat ve-ent y-enr ch nts/creat ve_ent y_enr ch nts.thr ft",
        "geo/t et_locat on_ nfo.thr ft",
        " d a/ d a_ref.thr ft",
        "t et.thr ft",
        "un nt ons/un nt ons.thr ft",
    ],
    platform = "java8",
    tags = ["bazel-compat ble"],
    dependency_roots = [
        ":ap -f elds",
        ":ed -control",
        ": d a-ent y",
        ":note-t et",
        " d aserv ces/commons/src/ma n/thr ft",
        "src/thr ft/com/tw ter/content- alth/tox creplyf lter",
        "src/thr ft/com/tw ter/dataproducts:enr ch nts_prof legeo",
        "src/thr ft/com/tw ter/esc rb rd:t et-annotat on",
        "src/thr ft/com/tw ter/expandodo:cards",
        "src/thr ft/com/tw ter/geoduck",
        "src/thr ft/com/tw ter/serv ce/scarecrow/gen:t ered-act ons",
        "src/thr ft/com/tw ter/spam/rtf:safety-label",
        "src/thr ft/com/tw ter/t  l nes/self_thread:thr ft",
        "src/thr ft/com/tw ter/tseng/w hhold ng:thr ft",
        "src/thr ft/com/tw ter/t et_p vots:t et-p vots",
        "strato/conf g/src/thr ft/com/tw ter/strato/columns/creat ve_ent y_enr ch nts",
        "un f ed-cards/thr ft/src/ma n/thr ft:thr ft-contract",
    ],
    export_roots = [
        ":ap -f elds",
        ":ed -control",
        ": d a-ent y",
        ":note-t et",
        " d aserv ces/commons/src/ma n/thr ft:thr ft",
        "src/thr ft/com/tw ter/content- alth/tox creplyf lter",
        "src/thr ft/com/tw ter/dataproducts:enr ch nts_prof legeo",
        "src/thr ft/com/tw ter/esc rb rd:t et-annotat on",
        "src/thr ft/com/tw ter/expandodo:cards",
        "src/thr ft/com/tw ter/geoduck:geoduck",
        "src/thr ft/com/tw ter/serv ce/scarecrow/gen:t ered-act ons",
        "src/thr ft/com/tw ter/spam/rtf:safety-label",
        "src/thr ft/com/tw ter/t  l nes/self_thread:thr ft",
        "src/thr ft/com/tw ter/tseng/w hhold ng:thr ft",
        "src/thr ft/com/tw ter/t et_p vots:t et-p vots",
        "strato/conf g/src/thr ft/com/tw ter/strato/columns/creat ve_ent y_enr ch nts",
    ],
    generate_languages = [
        "go",
        "java",
        "lua",
        "python",
        "scala",
        "strato",
    ],
    prov des_java_na  = "t etyp e-t et-thr ft-java",
    prov des_python_na  = "t etyp e-t et-thr ft-python",
    prov des_scala_na  = "t etyp e-t et-thr ft-scala",
)

create_thr ft_l brar es(
    base_na  = "serv ce",
    s ces = [
        "deleted_t et.thr ft",
        "t et_serv ce.thr ft",
    ],
    platform = "java8",
    tags = ["bazel-compat ble"],
    dependency_roots = [
        ":aud ",
        ":trans ent_context",
        ":t et",
        "carousel/serv ce/thr ft:serv ce",
        " ncent ves/j m ny/src/ma n/thr ft/com/tw ter/ ncent ves/j m ny:thr ft",
        " d aserv ces/commons/src/ma n/thr ft",
        "src/thr ft/com/tw ter/bouncer:bounce-act on-thr ft",
        "src/thr ft/com/tw ter/context:feature-context",
        "src/thr ft/com/tw ter/servo:servo-except on",
        "src/thr ft/com/tw ter/spam/features:safety- ta-data",
        "src/thr ft/com/tw ter/spam/rtf:safety-label",
        "src/thr ft/com/tw ter/spam/rtf:safety-level",
        "src/thr ft/com/tw ter/spam/rtf:safety-result",
        "src/thr ft/com/tw ter/tseng/w hhold ng:thr ft",
    ],
    export_roots = [
        ":trans ent_context",
        ":t et",
        "carousel/serv ce/thr ft:serv ce",
        " ncent ves/j m ny/src/ma n/thr ft/com/tw ter/ ncent ves/j m ny:thr ft",
        "src/thr ft/com/tw ter/bouncer:bounce-act on-thr ft",
        "src/thr ft/com/tw ter/context:feature-context",
        "src/thr ft/com/tw ter/spam/features:safety- ta-data",
        "src/thr ft/com/tw ter/spam/rtf:safety-level",
        "src/thr ft/com/tw ter/spam/rtf:safety-result",
    ],
    generate_languages = [
        "go",
        "java",
        "python",
        "scala",
        "strato",
    ],
    prov des_java_na  = "t etyp e-serv ce-thr ft-java",
    prov des_python_na  = "t etyp e-serv ce-thr ft-python",
    prov des_scala_na  = "t etyp e-serv ce-thr ft-scala",
)

create_thr ft_l brar es(
    base_na  = "events",
    s ces = [
        "ret et_arch val_event.thr ft",
        "t et_events.thr ft",
    ],
    platform = "java8",
    tags = ["bazel-compat ble"],
    dependency_roots = [
        ":aud ",
        ":trans ent_context",
        ":t et",
        "src/thr ft/com/tw ter/g zmoduck:user-thr ft",
    ],
    export_roots = [
        ":aud ",
        ":trans ent_context",
        ":t et",
        "src/thr ft/com/tw ter/g zmoduck:user-thr ft",
    ],
    generate_languages = [
        "java",
        "python",
        "scala",
        "strato",
    ],
    prov des_java_na  = "t etyp e-events-thr ft-java",
    prov des_scala_na  = "t etyp e-events-thr ft-scala",
)

create_thr ft_l brar es(
    base_na  = "aud ",
    s ces = ["t et_aud .thr ft"],
    platform = "java8",
    tags = ["bazel-compat ble"],
    generate_languages = [
        "go",
        "java",
        "lua",
        "python",
        "scala",
        "strato",
    ],
    prov des_java_na  = "t etyp e-aud -thr ft-java",
    prov des_scala_na  = "t etyp e-aud -thr ft-scala",
)

create_thr ft_l brar es(
    base_na  = "deprecated",
    s ces = ["deprecated.thr ft"],
    platform = "java8",
    tags = ["bazel-compat ble"],
    dependency_roots = [
        ":serv ce",
        ":t et",
        " d aserv ces/commons/src/ma n/thr ft",
        "src/thr ft/com/tw ter/expandodo:cards",
        "src/thr ft/com/tw ter/g zmoduck:user-thr ft",
        "t etyp e/common/src/thr ft/com/tw ter/t etyp e: d a-ent y",
    ],
    generate_languages = [
        "java",
        "python",
        "scala",
        "strato",
    ],
    prov des_java_na  = "t etyp e-deprecated-thr ft-java",
    prov des_scala_na  = "t etyp e-deprecated-thr ft-scala",
)

create_thr ft_l brar es(
    base_na  = "delete_locat on_data",
    s ces = ["delete_locat on_data.thr ft"],
    tags = ["bazel-compat ble"],
    prov des_java_na  = "delete-locat on-data-java",
    prov des_scala_na  = "delete-locat on-data-scala",
)

create_thr ft_l brar es(
    base_na  = "trans ent_context",
    s ces = ["trans ent_context.thr ft"],
    platform = "java8",
    tags = ["bazel-compat ble"],
    dependency_roots = [
        ":t et",
    ],
    generate_languages = [
        "go",
        "java",
        "lua",
        "python",
        "scala",
        "strato",
    ],
    prov des_java_na  = "trans ent-context-java",
    prov des_scala_na  = "trans ent-context-scala",
)

create_thr ft_l brar es(
    base_na  = "t et_compar son_serv ce",
    s ces = ["t et_compar son_serv ce.thr ft"],
    tags = ["bazel-compat ble"],
    dependency_roots = [
        ":serv ce",
        "src/thr ft/com/tw ter/context:tw ter-context",
    ],
    generate_languages = [
        "java",
        "scala",
    ],
    prov des_java_na  = "t et-compar son-serv ce-thr ft-java",
    prov des_scala_na  = "t et-compar son-serv ce-thr ft-scala",
)

create_thr ft_l brar es(
    base_na  = "t et_serv ce_graphql",
    s ces = ["t et_serv ce_graphql.thr ft"],
    platform = "java8",
    tags = ["bazel-compat ble"],
    dependency_roots = [
        "src/thr ft/com/tw ter/ads/callback:engage nt_request",
        "strato/conf g/src/thr ft/com/tw ter/strato/graphql",
    ],
    generate_languages = [
        "scala",
        "strato",
    ],
    prov des_scala_na  = "t et-serv ce-graphql-scala",
)

create_thr ft_l brar es(
    base_na  = "stored-t et- nfo",
    s ces = [
        "stored_t et_ nfo.thr ft",
    ],
    platform = "java8",
    tags = ["bazel-compat ble"],
    dependency_roots = [
        ":t et",
    ],
    generate_languages = [
        "java",
        "scala",
        "strato",
    ],
    prov des_java_na  = "t etyp e-stored-t et- nfo-thr ft-java",
    prov des_scala_na  = "t etyp e-stored-t et- nfo-thr ft-scala",
)

create_thr ft_l brar es(
    base_na  = "t et-serv ce-federated",
    s ces = [
        "t et_serv ce_federated.thr ft",
    ],
    platform = "java8",
    tags = ["bazel-compat ble"],
    dependency_roots = [
        ":stored-t et- nfo",
    ],
    generate_languages = [
        "java",
        "scala",
        "strato",
    ],
    prov des_java_na  = "t etyp e-serv ce-federated-thr ft-java",
    prov des_scala_na  = "t etyp e-serv ce-federated-thr ft-scala",
)
