<?xml vers on="1.0" encod ng="UTF-8"?>
<conf gurat on>
    <!-- See: https://logback.qos.ch/manual/conf gurat on.html#LevelChangePropagator -->
    <contextL stener class="ch.qos.logback.class c.jul.LevelChangePropagator">
      <resetJUL>true</resetJUL>
    </contextL stener>

    < nclude res ce="logg ng/logback-all- nclude.xml" />
    <property na ="ALERTABLE_MESSAGE_FORMAT" value="ALERTABLE: %msg"/>

    <!-- T  follow ng appender  s used to log all  mportant logs to a s ngle f le called
     "t etyp e- mportant.log". T  f lter "Only mportantLogsLogg ngF lter"  s used by t 
     appender to categor ze logs  nto  mportant or not. Anyth ng from warn ngs, errors and
     cr  cals are logged  re. Logs that are t et creat on, delet ons, undelet ons or
     updates are not logged to reduce no se from t  logger.
     NOTE: T  appender (and all f le based loggers)  s not pers stent through host restarts.
     All logs are lost on mach ne restarts. -->
    <appender na =" MPORTANT-F LE" class="ch.qos.logback.core.roll ng.Roll ngF leAppender">
        <f le>t etyp e- mportant.log</f le>
        <append>true</append>
        <roll ngPol cy class="ch.qos.logback.core.roll ng.F xedW ndowRoll ngPol cy">
            <f leNa Pattern>t etyp e- mportant-% .log</f leNa Pattern>
            <m n ndex>1</m n ndex>
            <max ndex>20</max ndex>
        </roll ngPol cy>
        <tr gger ngPol cy class="ch.qos.logback.core.roll ng.S zeBasedTr gger ngPol cy">
            <maxF leS ze>800MB</maxF leS ze>
        </tr gger ngPol cy>

        <encoder>
            <pattern>
                %date [%thread] %-5level %logger{36} - %msg%n
            </pattern>
        </encoder>

        <!-- Allow all  NFO+  ssages from t etyp e logs, ERROR+  ssages from all ot rs.
             T se f lters do not change t  log levels for t  loggers, t y only f lter what  s
             allo d to be logged to t   mportant f le. -->
        <f lter class="com.tw ter.t etyp e.ut l.logg ng.Only mportantLogsLogg ngF lter" />
    </appender>

    <!-- T  follow ng appender  s effect vely a copy of t  appender above  n order to
    pers st logs through restarts,  nstead of wr  ng t  content to a f le, t  appender wr es
      to   pers stent storage "splunk". LOGLENS was t  na  of old l brary to wr e t se logs
     nto a pers stent storage and was later replaced by "splunk". So, any appender that  nt ons
    loglens now  s actually send ng data to splunk. Due to l m at ons of logback,   cannot use
    t  sa  appender to wr e data at mult ple places (f le and splunk). So,   have 2 s m lar
    appenders that wr e to 2 separate places. -->
    <appender na ="LOGLENS-BASE" class="com.tw ter.loglens.logback.LoglensAppender">
        <mdcAdd  onalContext>true</mdcAdd  onalContext>
        <tag>${log.lens.tag}</tag>
        < ndex>${log.lens. ndex}</ ndex>
        <category>loglens</category>
        <encoder>
          <pattern>%msg</pattern>
        </encoder>

        <!-- Allow all  NFO+  ssages from t etyp e logs, ERROR+  ssages from all ot rs.
             T se f lters do not change t  log levels for t  loggers, t y only f lter what  s
             allo d to be logged to loglens. -->
        <f lter class="com.tw ter.t etyp e.ut l.logg ng.Only mportantLogsLogg ngF lter" />
    </appender>

    <!-- T   mportant logs may so t  s get too no sy to f nd relevant except ons and errors
     occurr ng  n t etyp e. So, t  appender  s used to only wr es Errors and Runt  Except ons
     to a f le called "alertable-except on.log". -->
    <appender na ="ALERTABLE-EXCEPT ON-F LE" class="ch.qos.logback.core.roll ng.Roll ngF leAppender">
        <f le>alertable-except on.log</f le>
        <append>true</append>
        <roll ngPol cy class="ch.qos.logback.core.roll ng.F xedW ndowRoll ngPol cy">
            <f leNa Pattern>alertable-except on-% .log</f leNa Pattern>
            <m n ndex>1</m n ndex>
            <max ndex>17</max ndex>
        </roll ngPol cy>
        <tr gger ngPol cy class="ch.qos.logback.core.roll ng.S zeBasedTr gger ngPol cy">
            <maxF leS ze>100MB</maxF leS ze>
        </tr gger ngPol cy>

        <encoder>
            <pattern>
                %date [%thread] %-5level %logger{36} - %msg%n
            </pattern>
        </encoder>

        <!-- Only log alertable except ons to t  f le -->
        <f lter class="com.tw ter.t etyp e.ut l.logg ng.AlertableExcept onLogg ngF lter" />
    </appender>

    <!-- T   s t  pers stent vers on of t  appender above for logg ng Errors and Runt  Except ons
     to splunk. To make   eas er to search for t se except ons/errors  n splunk   pref x t 
     except ons w h "ALERTABLE:" str ng. -->
    <appender na ="LOGLENS-ALERTABLE-BASE" class="com.tw ter.loglens.logback.LoglensAppender">
        <mdcAdd  onalContext>true</mdcAdd  onalContext>
        <tag>${log.lens.tag}</tag>
        < ndex>${log.lens. ndex}</ ndex>
        <category>loglens</category>
        <encoder>
            <pattern>${ALERTABLE_MESSAGE_FORMAT}</pattern>
        </encoder>

        <!-- Allow all Runt   Except ons and Error  ssages from t etyp e logs.
             T se f lters do not change t  log levels for t  loggers, t y only f lter what  s
             allo d to be logged to loglens. -->
        <f lter class="com.tw ter.t etyp e.ut l.logg ng.AlertableExcept onLogg ngF lter" />
    </appender>

    <!-- Each of t  appenders above are called Asynchronously to make sure logg ng operat ons
     are non-block ng. Also, one AsyncAppender should only wrap one appender, append ng mult ple
     appenders under one AsyncAppender does not work. -->
    <appender na ="LOGLENS"  class="ch.qos.logback.class c.AsyncAppender">
        <appender-ref ref="LOGLENS-BASE" />
    </appender>

    <appender na ="LOGLENS-ALERTABLE"  class="ch.qos.logback.class c.AsyncAppender">
        <appender-ref ref="LOGLENS-ALERTABLE-BASE" />
    </appender>

    <appender na =" MPORTANT"  class="ch.qos.logback.class c.AsyncAppender">
        <appender-ref ref=" MPORTANT-F LE" />
    </appender>

    <appender na ="ALERTABLE-EXCEPT ON"  class="ch.qos.logback.class c.AsyncAppender">
        <appender-ref ref="ALERTABLE-EXCEPT ON-F LE" />
    </appender>

    <!--  mcac d and ObservableCac  log a lot of  ssages at t  WARN level. T se  ssages
         are mostly not useful, so lets f lter t m out.  f   would l ke to see t m,
           can change t  log level on t  adm n page. -->
    <logger na ="com.tw ter.t etyp e.cac " level="error"/>
    <logger na =" mcac " level="error"/>

    <logger na ="com.tw ter.t etyp e.conf g. mcac Except onLogg ngF lter" level="debug" />
    <!-- Prune t  log of no sy DarkTraff cF lter except ons.  f   would l ke to see t m,
           can change t  log level on t  adm n page. -->
    <logger na ="DarkTraff cF lter" level="off"/>

    <!-- At last,   comb ne all t  act ve AsyncAppenders under a s ngle Root node. Any appender
    that  s m ss ng from t  node below w ll  not be called for logg ng. -->
    <root level=" NFO">
        <appender-ref ref="ALL" />
        <appender-ref ref=" MPORTANT" />
        <appender-ref ref="LOGLENS" />
        <appender-ref ref="LOGLENS-ALERTABLE" />
        <appender-ref ref="ALERTABLE-EXCEPT ON" />
    </root>
</conf gurat on>
