scala_l brary(
    s ces = ["*.scala"],
    comp ler_opt on_sets = ["fatal_warn ngs"],
    str ct_deps = True,
    tags = ["bazel-compat ble"],
    dependenc es = [
        "3rdparty/jvm/com/tw ter/storehaus:core",
        "3rdparty/jvm/javax/ nject:javax. nject",
        "conf gap /conf gap -core",
        "content-recom nder/thr ft/src/ma n/thr ft:content-recom nder-common-scala",
        "cr-m xer/server/src/ma n/scala/com/tw ter/cr_m xer/conf g",
        "cr-m xer/server/src/ma n/scala/com/tw ter/cr_m xer/model",
        "cr-m xer/server/src/ma n/scala/com/tw ter/cr_m xer/param",
        "cr-m xer/server/src/ma n/scala/com/tw ter/cr_m xer/param/dec der",
        "cr-m xer/server/src/ma n/scala/com/tw ter/cr_m xer/ut l",
        "cr-m xer/thr ft/src/ma n/thr ft:thr ft-scala",
        "dec der/src/ma n/scala",
        "fr gate/fr gate-common:base",
        "fr gate/fr gate-common/src/ma n/scala/com/tw ter/fr gate/common/base",
        "fr gate/fr gate-common/src/ma n/scala/com/tw ter/fr gate/common/ut l:stats_ut l",
        "hydra/common/l brar es/src/ma n/scala/com/tw ter/hydra/common/model_conf g",
        "hydra/part  on/thr ft/src/ma n/thr ft:thr ft-scala",
        "hydra/root/thr ft/src/ma n/thr ft:thr ft-scala",
        "product-m xer/core/src/ma n/thr ft/com/tw ter/product_m xer/core:thr ft-scala",
        "src/scala/com/tw ter/s mclusters_v2/common",
        "src/thr ft/com/tw ter/core_workflows/user_model:user_model-scala",
        "src/thr ft/com/tw ter/ml/ap :data-scala",
        "src/thr ft/com/tw ter/s mclusters_v2:s mclusters_v2-thr ft-scala",
    ],
)
