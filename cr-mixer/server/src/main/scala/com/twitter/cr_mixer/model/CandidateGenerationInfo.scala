package com.tw ter.cr_m xer.model

 mport com.tw ter.cr_m xer.thr ftscala.S m lar yEng neType
 mport com.tw ter.cr_m xer.thr ftscala.S ceType
 mport com.tw ter.s mclusters_v2.common.User d
 mport com.tw ter.s mclusters_v2.thr ftscala. nternal d
 mport com.tw ter.ut l.T  

/***
 * T et-level attr butes. Represents t  s ce used  n cand date generat on
 * Due to legacy reason, S ceType used to represent both S ceType and S m lar yEng neType
 * Mov ng forward, S ceType w ll be used for S ceType ONLY. eg., T etFavor e, UserFollow, Tw ceUser d
 * At t  sa  t  ,   create a new S m lar yEng neType to separate t m. eg., S mClustersANN
 *
 * Currently, one spec al case  s that   have Tw ceUser d as a s ce, wh ch  s not necessar ly a "s gnal"
 * @param s ceType, e.g., S ceType.T etFavor e, S ceType.UserFollow, S ceType.Tw ceUser d
 * @param  nternal d, e.g., User d(0L), T et d(0L)
 */
case class S ce nfo(
  s ceType: S ceType,
   nternal d:  nternal d,
  s ceEventT  : Opt on[T  ])

/***
 * T et-level attr butes. Represents t  s ce User Graph used  n cand date generat on
 *    s an  nter d ate product, and w ll not be stored, unl ke S ce nfo.
 * Essent ally, CrM xer quer es a graph, and t  graph returns a l st of users to be used as s ces.
 * For  nstance, RealGraph, EarlyB rd, FRS, Stp, etc. T  underly ng s m lar y eng nes such as
 * UTG or UTEG w ll leverage t se s ces to bu ld cand dates.
 *
 *   extended t  def n  on of S ceType to cover both "S ce S gnal" and "S ce Graph"
 * See [CrM xer] Graph Based S ce Fetc r Abstract on Proposal:
 *
 * cons der mak ng both S ce nfo and GraphS ce nfo extends t  sa  tra  to
 * have a un f ed  nterface.
 */
case class GraphS ce nfo(
  s ceType: S ceType,
  seedW hScores: Map[User d, Double])

/***
 * T et-level attr butes. Represents t  s m lar y eng ne (t  algor hm) used for
 * cand date generat on along w h t  r  tadata.
 * @param s m lar yEng neType, e.g., S mClustersANN, UserT etGraph
 * @param model d. e.g., UserT etGraphConsu rEmbedd ng_ALL_20210708
 * @param score - a score generated by t  s m eng ne
 */
case class S m lar yEng ne nfo(
  s m lar yEng neType: S m lar yEng neType,
  model d: Opt on[Str ng], // Model d can be a None. e.g., UTEG, Un f edT etBasedSE. etc
  score: Opt on[Double])

/****
 * T et-level attr butes. A comb nat on for both S ce nfo and S m lar yEng ne nfo
 * S m lar yEng ne  s a compos  on, and   can be composed by many leaf S m lar y Eng nes.
 * For  nstance, t  T etBasedUn f ed SE could be a compos  on of both UserT etGraph SE, S mClustersANN SE.
 * Note that a S m lar yEng ne (Compos e) may call ot r S m lar yEng nes (Atom c, Contr but ng)
 * to contr bute to  s f nal cand date l st.   track t se Contr but ng SEs  n t  contr but ngS m lar yEng nes l st
 *
 * @param s ce nfoOpt - t   s opt onal as many consu rBased CG does not have a s ce
 * @param s m lar yEng ne nfo - t  s m lar y eng ne used  n Cand date Generat on (eg., T etBasedUn f edSE).   can be an atom c SE or an compos e SE
 * @param contr but ngS m lar yEng nes - only compos e SE w ll have   (e.g., SANNN, UTG). Ot rw se    s an empty Seq. All contr but ng SEs mst be atom c
 */
case class Cand dateGenerat on nfo(
  s ce nfoOpt: Opt on[S ce nfo],
  s m lar yEng ne nfo: S m lar yEng ne nfo,
  contr but ngS m lar yEng nes: Seq[S m lar yEng ne nfo])
