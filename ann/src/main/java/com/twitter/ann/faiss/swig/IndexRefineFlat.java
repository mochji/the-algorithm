/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class  ndexRef neFlat extends  ndexRef ne {
  pr vate trans ent long sw gCPtr;

  protected  ndexRef neFlat(long cPtr, boolean c moryOwn) {
    super(sw gfa ssJN . ndexRef neFlat_SW GUpcast(cPtr), c moryOwn);
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr( ndexRef neFlat obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_ ndexRef neFlat(sw gCPtr);
      }
      sw gCPtr = 0;
    }
    super.delete();
  }

  publ c  ndexRef neFlat( ndex base_ ndex) {
    t (sw gfa ssJN .new_ ndexRef neFlat__SW G_0( ndex.getCPtr(base_ ndex), base_ ndex), true);
  }

  publ c  ndexRef neFlat( ndex base_ ndex, SW GTYPE_p_float xb) {
    t (sw gfa ssJN .new_ ndexRef neFlat__SW G_1( ndex.getCPtr(base_ ndex), base_ ndex, SW GTYPE_p_float.getCPtr(xb)), true);
  }

  publ c  ndexRef neFlat() {
    t (sw gfa ssJN .new_ ndexRef neFlat__SW G_2(), true);
  }

  publ c vo d search(long n, SW GTYPE_p_float x, long k, SW GTYPE_p_float d stances, LongVector labels) {
    sw gfa ssJN . ndexRef neFlat_search(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), k, SW GTYPE_p_float.getCPtr(d stances), SW GTYPE_p_long_long.getCPtr(labels.data()), labels);
  }

}
