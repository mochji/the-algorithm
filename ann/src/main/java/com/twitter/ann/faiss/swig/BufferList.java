/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class BufferL st {
  pr vate trans ent long sw gCPtr;
  protected trans ent boolean sw gC mOwn;

  protected BufferL st(long cPtr, boolean c moryOwn) {
    sw gC mOwn = c moryOwn;
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(BufferL st obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_BufferL st(sw gCPtr);
      }
      sw gCPtr = 0;
    }
  }

  publ c vo d setBuffer_s ze(long value) {
    sw gfa ssJN .BufferL st_buffer_s ze_set(sw gCPtr, t , value);
  }

  publ c long getBuffer_s ze() {
    return sw gfa ssJN .BufferL st_buffer_s ze_get(sw gCPtr, t );
  }

  publ c vo d setBuffers(SW GTYPE_p_std__vectorT_fa ss__BufferL st__Buffer_t value) {
    sw gfa ssJN .BufferL st_buffers_set(sw gCPtr, t , SW GTYPE_p_std__vectorT_fa ss__BufferL st__Buffer_t.getCPtr(value));
  }

  publ c SW GTYPE_p_std__vectorT_fa ss__BufferL st__Buffer_t getBuffers() {
    long cPtr = sw gfa ssJN .BufferL st_buffers_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new SW GTYPE_p_std__vectorT_fa ss__BufferL st__Buffer_t(cPtr, false);
  }

  publ c vo d setWp(long value) {
    sw gfa ssJN .BufferL st_wp_set(sw gCPtr, t , value);
  }

  publ c long getWp() {
    return sw gfa ssJN .BufferL st_wp_get(sw gCPtr, t );
  }

  publ c BufferL st(long buffer_s ze) {
    t (sw gfa ssJN .new_BufferL st(buffer_s ze), true);
  }

  publ c vo d append_buffer() {
    sw gfa ssJN .BufferL st_append_buffer(sw gCPtr, t );
  }

  publ c vo d add(long  d, float d s) {
    sw gfa ssJN .BufferL st_add(sw gCPtr, t ,  d, d s);
  }

  publ c vo d copy_range(long ofs, long n, LongVector dest_ ds, SW GTYPE_p_float dest_d s) {
    sw gfa ssJN .BufferL st_copy_range(sw gCPtr, t , ofs, n, SW GTYPE_p_long_long.getCPtr(dest_ ds.data()), dest_ ds, SW GTYPE_p_float.getCPtr(dest_d s));
  }

}
