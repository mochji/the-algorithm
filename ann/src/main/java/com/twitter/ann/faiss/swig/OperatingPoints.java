/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class Operat ngPo nts {
  pr vate trans ent long sw gCPtr;
  protected trans ent boolean sw gC mOwn;

  protected Operat ngPo nts(long cPtr, boolean c moryOwn) {
    sw gC mOwn = c moryOwn;
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(Operat ngPo nts obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_Operat ngPo nts(sw gCPtr);
      }
      sw gCPtr = 0;
    }
  }

  publ c vo d setAll_pts(Operat ngPo ntVector value) {
    sw gfa ssJN .Operat ngPo nts_all_pts_set(sw gCPtr, t , Operat ngPo ntVector.getCPtr(value), value);
  }

  publ c Operat ngPo ntVector getAll_pts() {
    long cPtr = sw gfa ssJN .Operat ngPo nts_all_pts_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new Operat ngPo ntVector(cPtr, false);
  }

  publ c vo d setOpt mal_pts(Operat ngPo ntVector value) {
    sw gfa ssJN .Operat ngPo nts_opt mal_pts_set(sw gCPtr, t , Operat ngPo ntVector.getCPtr(value), value);
  }

  publ c Operat ngPo ntVector getOpt mal_pts() {
    long cPtr = sw gfa ssJN .Operat ngPo nts_opt mal_pts_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new Operat ngPo ntVector(cPtr, false);
  }

  publ c Operat ngPo nts() {
    t (sw gfa ssJN .new_Operat ngPo nts(), true);
  }

  publ c  nt  rge_w h(Operat ngPo nts ot r, Str ng pref x) {
    return sw gfa ssJN .Operat ngPo nts_ rge_w h__SW G_0(sw gCPtr, t , Operat ngPo nts.getCPtr(ot r), ot r, pref x);
  }

  publ c  nt  rge_w h(Operat ngPo nts ot r) {
    return sw gfa ssJN .Operat ngPo nts_ rge_w h__SW G_1(sw gCPtr, t , Operat ngPo nts.getCPtr(ot r), ot r);
  }

  publ c vo d clear() {
    sw gfa ssJN .Operat ngPo nts_clear(sw gCPtr, t );
  }

  publ c boolean add(double perf, double t, Str ng key, long cno) {
    return sw gfa ssJN .Operat ngPo nts_add__SW G_0(sw gCPtr, t , perf, t, key, cno);
  }

  publ c boolean add(double perf, double t, Str ng key) {
    return sw gfa ssJN .Operat ngPo nts_add__SW G_1(sw gCPtr, t , perf, t, key);
  }

  publ c double t_for_perf(double perf) {
    return sw gfa ssJN .Operat ngPo nts_t_for_perf(sw gCPtr, t , perf);
  }

  publ c vo d d splay(boolean only_opt mal) {
    sw gfa ssJN .Operat ngPo nts_d splay__SW G_0(sw gCPtr, t , only_opt mal);
  }

  publ c vo d d splay() {
    sw gfa ssJN .Operat ngPo nts_d splay__SW G_1(sw gCPtr, t );
  }

  publ c vo d all_to_gnuplot(Str ng fna ) {
    sw gfa ssJN .Operat ngPo nts_all_to_gnuplot(sw gCPtr, t , fna );
  }

  publ c vo d opt mal_to_gnuplot(Str ng fna ) {
    sw gfa ssJN .Operat ngPo nts_opt mal_to_gnuplot(sw gCPtr, t , fna );
  }

}
