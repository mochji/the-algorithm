/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class  ndexScalarQuant zer extends  ndexFlatCodes {
  pr vate trans ent long sw gCPtr;

  protected  ndexScalarQuant zer(long cPtr, boolean c moryOwn) {
    super(sw gfa ssJN . ndexScalarQuant zer_SW GUpcast(cPtr), c moryOwn);
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr( ndexScalarQuant zer obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_ ndexScalarQuant zer(sw gCPtr);
      }
      sw gCPtr = 0;
    }
    super.delete();
  }

  publ c vo d setSq(SW GTYPE_p_ScalarQuant zer value) {
    sw gfa ssJN . ndexScalarQuant zer_sq_set(sw gCPtr, t , SW GTYPE_p_ScalarQuant zer.getCPtr(value));
  }

  publ c SW GTYPE_p_ScalarQuant zer getSq() {
    return new SW GTYPE_p_ScalarQuant zer(sw gfa ssJN . ndexScalarQuant zer_sq_get(sw gCPtr, t ), true);
  }

  publ c  ndexScalarQuant zer( nt d, SW GTYPE_p_ScalarQuant zer__Quant zerType qtype,  tr cType  tr c) {
    t (sw gfa ssJN .new_ ndexScalarQuant zer__SW G_0(d, SW GTYPE_p_ScalarQuant zer__Quant zerType.getCPtr(qtype),  tr c.sw gValue()), true);
  }

  publ c  ndexScalarQuant zer( nt d, SW GTYPE_p_ScalarQuant zer__Quant zerType qtype) {
    t (sw gfa ssJN .new_ ndexScalarQuant zer__SW G_1(d, SW GTYPE_p_ScalarQuant zer__Quant zerType.getCPtr(qtype)), true);
  }

  publ c  ndexScalarQuant zer() {
    t (sw gfa ssJN .new_ ndexScalarQuant zer__SW G_2(), true);
  }

  publ c vo d tra n(long n, SW GTYPE_p_float x) {
    sw gfa ssJN . ndexScalarQuant zer_tra n(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x));
  }

  publ c vo d search(long n, SW GTYPE_p_float x, long k, SW GTYPE_p_float d stances, LongVector labels) {
    sw gfa ssJN . ndexScalarQuant zer_search(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), k, SW GTYPE_p_float.getCPtr(d stances), SW GTYPE_p_long_long.getCPtr(labels.data()), labels);
  }

  publ c D stanceComputer get_d stance_computer() {
    long cPtr = sw gfa ssJN . ndexScalarQuant zer_get_d stance_computer(sw gCPtr, t );
    return (cPtr == 0) ? null : new D stanceComputer(cPtr, false);
  }

  publ c vo d sa_encode(long n, SW GTYPE_p_float x, SW GTYPE_p_uns gned_char bytes) {
    sw gfa ssJN . ndexScalarQuant zer_sa_encode(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_uns gned_char.getCPtr(bytes));
  }

  publ c vo d sa_decode(long n, SW GTYPE_p_uns gned_char bytes, SW GTYPE_p_float x) {
    sw gfa ssJN . ndexScalarQuant zer_sa_decode(sw gCPtr, t , n, SW GTYPE_p_uns gned_char.getCPtr(bytes), SW GTYPE_p_float.getCPtr(x));
  }

}
