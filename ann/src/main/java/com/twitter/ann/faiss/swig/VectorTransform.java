/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class VectorTransform {
  pr vate trans ent long sw gCPtr;
  protected trans ent boolean sw gC mOwn;

  protected VectorTransform(long cPtr, boolean c moryOwn) {
    sw gC mOwn = c moryOwn;
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(VectorTransform obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_VectorTransform(sw gCPtr);
      }
      sw gCPtr = 0;
    }
  }

  publ c vo d setD_ n( nt value) {
    sw gfa ssJN .VectorTransform_d_ n_set(sw gCPtr, t , value);
  }

  publ c  nt getD_ n() {
    return sw gfa ssJN .VectorTransform_d_ n_get(sw gCPtr, t );
  }

  publ c vo d setD_out( nt value) {
    sw gfa ssJN .VectorTransform_d_out_set(sw gCPtr, t , value);
  }

  publ c  nt getD_out() {
    return sw gfa ssJN .VectorTransform_d_out_get(sw gCPtr, t );
  }

  publ c vo d set s_tra ned(boolean value) {
    sw gfa ssJN .VectorTransform_ s_tra ned_set(sw gCPtr, t , value);
  }

  publ c boolean get s_tra ned() {
    return sw gfa ssJN .VectorTransform_ s_tra ned_get(sw gCPtr, t );
  }

  publ c vo d tra n(long n, SW GTYPE_p_float x) {
    sw gfa ssJN .VectorTransform_tra n(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x));
  }

  publ c SW GTYPE_p_float apply(long n, SW GTYPE_p_float x) {
    long cPtr = sw gfa ssJN .VectorTransform_apply(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x));
    return (cPtr == 0) ? null : new SW GTYPE_p_float(cPtr, false);
  }

  publ c vo d apply_noalloc(long n, SW GTYPE_p_float x, SW GTYPE_p_float xt) {
    sw gfa ssJN .VectorTransform_apply_noalloc(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_float.getCPtr(xt));
  }

  publ c vo d reverse_transform(long n, SW GTYPE_p_float xt, SW GTYPE_p_float x) {
    sw gfa ssJN .VectorTransform_reverse_transform(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(xt), SW GTYPE_p_float.getCPtr(x));
  }

}
