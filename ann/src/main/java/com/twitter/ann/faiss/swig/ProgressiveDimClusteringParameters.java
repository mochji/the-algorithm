/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class Progress veD mCluster ngPara ters extends Cluster ngPara ters {
  pr vate trans ent long sw gCPtr;

  protected Progress veD mCluster ngPara ters(long cPtr, boolean c moryOwn) {
    super(sw gfa ssJN .Progress veD mCluster ngPara ters_SW GUpcast(cPtr), c moryOwn);
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(Progress veD mCluster ngPara ters obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_Progress veD mCluster ngPara ters(sw gCPtr);
      }
      sw gCPtr = 0;
    }
    super.delete();
  }

  publ c vo d setProgress ve_d m_steps( nt value) {
    sw gfa ssJN .Progress veD mCluster ngPara ters_progress ve_d m_steps_set(sw gCPtr, t , value);
  }

  publ c  nt getProgress ve_d m_steps() {
    return sw gfa ssJN .Progress veD mCluster ngPara ters_progress ve_d m_steps_get(sw gCPtr, t );
  }

  publ c vo d setApply_pca(boolean value) {
    sw gfa ssJN .Progress veD mCluster ngPara ters_apply_pca_set(sw gCPtr, t , value);
  }

  publ c boolean getApply_pca() {
    return sw gfa ssJN .Progress veD mCluster ngPara ters_apply_pca_get(sw gCPtr, t );
  }

  publ c Progress veD mCluster ngPara ters() {
    t (sw gfa ssJN .new_Progress veD mCluster ngPara ters(), true);
  }

}
