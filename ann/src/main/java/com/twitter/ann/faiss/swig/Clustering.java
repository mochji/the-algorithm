/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class Cluster ng extends Cluster ngPara ters {
  pr vate trans ent long sw gCPtr;

  protected Cluster ng(long cPtr, boolean c moryOwn) {
    super(sw gfa ssJN .Cluster ng_SW GUpcast(cPtr), c moryOwn);
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(Cluster ng obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_Cluster ng(sw gCPtr);
      }
      sw gCPtr = 0;
    }
    super.delete();
  }

  publ c vo d setD(long value) {
    sw gfa ssJN .Cluster ng_d_set(sw gCPtr, t , value);
  }

  publ c long getD() {
    return sw gfa ssJN .Cluster ng_d_get(sw gCPtr, t );
  }

  publ c vo d setK(long value) {
    sw gfa ssJN .Cluster ng_k_set(sw gCPtr, t , value);
  }

  publ c long getK() {
    return sw gfa ssJN .Cluster ng_k_get(sw gCPtr, t );
  }

  publ c vo d setCentro ds(FloatVector value) {
    sw gfa ssJN .Cluster ng_centro ds_set(sw gCPtr, t , FloatVector.getCPtr(value), value);
  }

  publ c FloatVector getCentro ds() {
    long cPtr = sw gfa ssJN .Cluster ng_centro ds_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new FloatVector(cPtr, false);
  }

  publ c vo d set erat on_stats(SW GTYPE_p_std__vectorT_fa ss__Cluster ng erat onStats_t value) {
    sw gfa ssJN .Cluster ng_ erat on_stats_set(sw gCPtr, t , SW GTYPE_p_std__vectorT_fa ss__Cluster ng erat onStats_t.getCPtr(value));
  }

  publ c SW GTYPE_p_std__vectorT_fa ss__Cluster ng erat onStats_t get erat on_stats() {
    long cPtr = sw gfa ssJN .Cluster ng_ erat on_stats_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new SW GTYPE_p_std__vectorT_fa ss__Cluster ng erat onStats_t(cPtr, false);
  }

  publ c Cluster ng( nt d,  nt k) {
    t (sw gfa ssJN .new_Cluster ng__SW G_0(d, k), true);
  }

  publ c Cluster ng( nt d,  nt k, Cluster ngPara ters cp) {
    t (sw gfa ssJN .new_Cluster ng__SW G_1(d, k, Cluster ngPara ters.getCPtr(cp), cp), true);
  }

  publ c vo d tra n(long n, SW GTYPE_p_float x,  ndex  ndex, SW GTYPE_p_float x_  ghts) {
    sw gfa ssJN .Cluster ng_tra n__SW G_0(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x),  ndex.getCPtr( ndex),  ndex, SW GTYPE_p_float.getCPtr(x_  ghts));
  }

  publ c vo d tra n(long n, SW GTYPE_p_float x,  ndex  ndex) {
    sw gfa ssJN .Cluster ng_tra n__SW G_1(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x),  ndex.getCPtr( ndex),  ndex);
  }

  publ c vo d tra n_encoded(long nx, SW GTYPE_p_uns gned_char x_ n,  ndex codec,  ndex  ndex, SW GTYPE_p_float   ghts) {
    sw gfa ssJN .Cluster ng_tra n_encoded__SW G_0(sw gCPtr, t , nx, SW GTYPE_p_uns gned_char.getCPtr(x_ n),  ndex.getCPtr(codec), codec,  ndex.getCPtr( ndex),  ndex, SW GTYPE_p_float.getCPtr(  ghts));
  }

  publ c vo d tra n_encoded(long nx, SW GTYPE_p_uns gned_char x_ n,  ndex codec,  ndex  ndex) {
    sw gfa ssJN .Cluster ng_tra n_encoded__SW G_1(sw gCPtr, t , nx, SW GTYPE_p_uns gned_char.getCPtr(x_ n),  ndex.getCPtr(codec), codec,  ndex.getCPtr( ndex),  ndex);
  }

  publ c vo d post_process_centro ds() {
    sw gfa ssJN .Cluster ng_post_process_centro ds(sw gCPtr, t );
  }

}
