/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class HStack nvertedL sts extends ReadOnly nvertedL sts {
  pr vate trans ent long sw gCPtr;

  protected HStack nvertedL sts(long cPtr, boolean c moryOwn) {
    super(sw gfa ssJN .HStack nvertedL sts_SW GUpcast(cPtr), c moryOwn);
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(HStack nvertedL sts obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_HStack nvertedL sts(sw gCPtr);
      }
      sw gCPtr = 0;
    }
    super.delete();
  }

  publ c vo d set ls(SW GTYPE_p_std__vectorT_fa ss__ nvertedL sts_const_p_t value) {
    sw gfa ssJN .HStack nvertedL sts_ ls_set(sw gCPtr, t , SW GTYPE_p_std__vectorT_fa ss__ nvertedL sts_const_p_t.getCPtr(value));
  }

  publ c SW GTYPE_p_std__vectorT_fa ss__ nvertedL sts_const_p_t get ls() {
    long cPtr = sw gfa ssJN .HStack nvertedL sts_ ls_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new SW GTYPE_p_std__vectorT_fa ss__ nvertedL sts_const_p_t(cPtr, false);
  }

  publ c HStack nvertedL sts( nt n l, SW GTYPE_p_p_fa ss__ nvertedL sts  ls) {
    t (sw gfa ssJN .new_HStack nvertedL sts(n l, SW GTYPE_p_p_fa ss__ nvertedL sts.getCPtr( ls)), true);
  }

  publ c long l st_s ze(long l st_no) {
    return sw gfa ssJN .HStack nvertedL sts_l st_s ze(sw gCPtr, t , l st_no);
  }

  publ c SW GTYPE_p_uns gned_char get_codes(long l st_no) {
    long cPtr = sw gfa ssJN .HStack nvertedL sts_get_codes(sw gCPtr, t , l st_no);
    return (cPtr == 0) ? null : new SW GTYPE_p_uns gned_char(cPtr, false);
  }

  publ c LongVector get_ ds(long l st_no) {
    return new LongVector(sw gfa ssJN .HStack nvertedL sts_get_ ds(sw gCPtr, t , l st_no), false);
}

  publ c vo d prefetch_l sts(LongVector l st_nos,  nt nl st) {
    sw gfa ssJN .HStack nvertedL sts_prefetch_l sts(sw gCPtr, t , SW GTYPE_p_long_long.getCPtr(l st_nos.data()), l st_nos, nl st);
  }

  publ c vo d release_codes(long l st_no, SW GTYPE_p_uns gned_char codes) {
    sw gfa ssJN .HStack nvertedL sts_release_codes(sw gCPtr, t , l st_no, SW GTYPE_p_uns gned_char.getCPtr(codes));
  }

  publ c vo d release_ ds(long l st_no, LongVector  ds) {
    sw gfa ssJN .HStack nvertedL sts_release_ ds(sw gCPtr, t , l st_no, SW GTYPE_p_long_long.getCPtr( ds.data()),  ds);
  }

  publ c long get_s ngle_ d(long l st_no, long offset) {
    return sw gfa ssJN .HStack nvertedL sts_get_s ngle_ d(sw gCPtr, t , l st_no, offset);
}

  publ c SW GTYPE_p_uns gned_char get_s ngle_code(long l st_no, long offset) {
    long cPtr = sw gfa ssJN .HStack nvertedL sts_get_s ngle_code(sw gCPtr, t , l st_no, offset);
    return (cPtr == 0) ? null : new SW GTYPE_p_uns gned_char(cPtr, false);
  }

}
