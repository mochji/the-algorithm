/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class Para terSpace {
  pr vate trans ent long sw gCPtr;
  protected trans ent boolean sw gC mOwn;

  protected Para terSpace(long cPtr, boolean c moryOwn) {
    sw gC mOwn = c moryOwn;
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(Para terSpace obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_Para terSpace(sw gCPtr);
      }
      sw gCPtr = 0;
    }
  }

  publ c vo d setPara ter_ranges(SW GTYPE_p_std__vectorT_fa ss__Para terRange_t value) {
    sw gfa ssJN .Para terSpace_para ter_ranges_set(sw gCPtr, t , SW GTYPE_p_std__vectorT_fa ss__Para terRange_t.getCPtr(value));
  }

  publ c SW GTYPE_p_std__vectorT_fa ss__Para terRange_t getPara ter_ranges() {
    long cPtr = sw gfa ssJN .Para terSpace_para ter_ranges_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new SW GTYPE_p_std__vectorT_fa ss__Para terRange_t(cPtr, false);
  }

  publ c vo d setVerbose( nt value) {
    sw gfa ssJN .Para terSpace_verbose_set(sw gCPtr, t , value);
  }

  publ c  nt getVerbose() {
    return sw gfa ssJN .Para terSpace_verbose_get(sw gCPtr, t );
  }

  publ c vo d setN_exper  nts( nt value) {
    sw gfa ssJN .Para terSpace_n_exper  nts_set(sw gCPtr, t , value);
  }

  publ c  nt getN_exper  nts() {
    return sw gfa ssJN .Para terSpace_n_exper  nts_get(sw gCPtr, t );
  }

  publ c vo d setBatchs ze(long value) {
    sw gfa ssJN .Para terSpace_batchs ze_set(sw gCPtr, t , value);
  }

  publ c long getBatchs ze() {
    return sw gfa ssJN .Para terSpace_batchs ze_get(sw gCPtr, t );
  }

  publ c vo d setThread_over_batc s(boolean value) {
    sw gfa ssJN .Para terSpace_thread_over_batc s_set(sw gCPtr, t , value);
  }

  publ c boolean getThread_over_batc s() {
    return sw gfa ssJN .Para terSpace_thread_over_batc s_get(sw gCPtr, t );
  }

  publ c vo d setM n_test_durat on(double value) {
    sw gfa ssJN .Para terSpace_m n_test_durat on_set(sw gCPtr, t , value);
  }

  publ c double getM n_test_durat on() {
    return sw gfa ssJN .Para terSpace_m n_test_durat on_get(sw gCPtr, t );
  }

  publ c Para terSpace() {
    t (sw gfa ssJN .new_Para terSpace(), true);
  }

  publ c long n_comb nat ons() {
    return sw gfa ssJN .Para terSpace_n_comb nat ons(sw gCPtr, t );
  }

  publ c boolean comb nat on_ge(long c1, long c2) {
    return sw gfa ssJN .Para terSpace_comb nat on_ge(sw gCPtr, t , c1, c2);
  }

  publ c Str ng comb nat on_na (long cno) {
    return sw gfa ssJN .Para terSpace_comb nat on_na (sw gCPtr, t , cno);
  }

  publ c vo d d splay() {
    sw gfa ssJN .Para terSpace_d splay(sw gCPtr, t );
  }

  publ c Para terRange add_range(Str ng na ) {
    return new Para terRange(sw gfa ssJN .Para terSpace_add_range(sw gCPtr, t , na ), false);
  }

  publ c vo d  n  al ze( ndex  ndex) {
    sw gfa ssJN .Para terSpace_ n  al ze(sw gCPtr, t ,  ndex.getCPtr( ndex),  ndex);
  }

  publ c vo d set_ ndex_para ters( ndex  ndex, long cno) {
    sw gfa ssJN .Para terSpace_set_ ndex_para ters__SW G_0(sw gCPtr, t ,  ndex.getCPtr( ndex),  ndex, cno);
  }

  publ c vo d set_ ndex_para ters( ndex  ndex, Str ng param_str ng) {
    sw gfa ssJN .Para terSpace_set_ ndex_para ters__SW G_1(sw gCPtr, t ,  ndex.getCPtr( ndex),  ndex, param_str ng);
  }

  publ c vo d set_ ndex_para ter( ndex  ndex, Str ng na , double val) {
    sw gfa ssJN .Para terSpace_set_ ndex_para ter(sw gCPtr, t ,  ndex.getCPtr( ndex),  ndex, na , val);
  }

  publ c vo d update_bounds(long cno, Operat ngPo nt op, SW GTYPE_p_double upper_bound_perf, SW GTYPE_p_double lo r_bound_t) {
    sw gfa ssJN .Para terSpace_update_bounds(sw gCPtr, t , cno, Operat ngPo nt.getCPtr(op), op, SW GTYPE_p_double.getCPtr(upper_bound_perf), SW GTYPE_p_double.getCPtr(lo r_bound_t));
  }

  publ c vo d explore( ndex  ndex, long nq, SW GTYPE_p_float xq, AutoTuneCr er on cr , Operat ngPo nts ops) {
    sw gfa ssJN .Para terSpace_explore(sw gCPtr, t ,  ndex.getCPtr( ndex),  ndex, nq, SW GTYPE_p_float.getCPtr(xq), AutoTuneCr er on.getCPtr(cr ), cr , Operat ngPo nts.getCPtr(ops), ops);
  }

}
