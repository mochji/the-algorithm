/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class  nvertedL sts {
  pr vate trans ent long sw gCPtr;
  protected trans ent boolean sw gC mOwn;

  protected  nvertedL sts(long cPtr, boolean c moryOwn) {
    sw gC mOwn = c moryOwn;
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr( nvertedL sts obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_ nvertedL sts(sw gCPtr);
      }
      sw gCPtr = 0;
    }
  }

  publ c vo d setNl st(long value) {
    sw gfa ssJN . nvertedL sts_nl st_set(sw gCPtr, t , value);
  }

  publ c long getNl st() {
    return sw gfa ssJN . nvertedL sts_nl st_get(sw gCPtr, t );
  }

  publ c vo d setCode_s ze(long value) {
    sw gfa ssJN . nvertedL sts_code_s ze_set(sw gCPtr, t , value);
  }

  publ c long getCode_s ze() {
    return sw gfa ssJN . nvertedL sts_code_s ze_get(sw gCPtr, t );
  }

  publ c long l st_s ze(long l st_no) {
    return sw gfa ssJN . nvertedL sts_l st_s ze(sw gCPtr, t , l st_no);
  }

  publ c SW GTYPE_p_uns gned_char get_codes(long l st_no) {
    long cPtr = sw gfa ssJN . nvertedL sts_get_codes(sw gCPtr, t , l st_no);
    return (cPtr == 0) ? null : new SW GTYPE_p_uns gned_char(cPtr, false);
  }

  publ c LongVector get_ ds(long l st_no) {
    return new LongVector(sw gfa ssJN . nvertedL sts_get_ ds(sw gCPtr, t , l st_no), false);
}

  publ c vo d release_codes(long l st_no, SW GTYPE_p_uns gned_char codes) {
    sw gfa ssJN . nvertedL sts_release_codes(sw gCPtr, t , l st_no, SW GTYPE_p_uns gned_char.getCPtr(codes));
  }

  publ c vo d release_ ds(long l st_no, LongVector  ds) {
    sw gfa ssJN . nvertedL sts_release_ ds(sw gCPtr, t , l st_no, SW GTYPE_p_long_long.getCPtr( ds.data()),  ds);
  }

  publ c long get_s ngle_ d(long l st_no, long offset) {
    return sw gfa ssJN . nvertedL sts_get_s ngle_ d(sw gCPtr, t , l st_no, offset);
}

  publ c SW GTYPE_p_uns gned_char get_s ngle_code(long l st_no, long offset) {
    long cPtr = sw gfa ssJN . nvertedL sts_get_s ngle_code(sw gCPtr, t , l st_no, offset);
    return (cPtr == 0) ? null : new SW GTYPE_p_uns gned_char(cPtr, false);
  }

  publ c vo d prefetch_l sts(LongVector l st_nos,  nt nl st) {
    sw gfa ssJN . nvertedL sts_prefetch_l sts(sw gCPtr, t , SW GTYPE_p_long_long.getCPtr(l st_nos.data()), l st_nos, nl st);
  }

  publ c long add_entry(long l st_no, long t  d, SW GTYPE_p_uns gned_char code) {
    return sw gfa ssJN . nvertedL sts_add_entry(sw gCPtr, t , l st_no, t  d, SW GTYPE_p_uns gned_char.getCPtr(code));
  }

  publ c long add_entr es(long l st_no, long n_entry, LongVector  ds, SW GTYPE_p_uns gned_char code) {
    return sw gfa ssJN . nvertedL sts_add_entr es(sw gCPtr, t , l st_no, n_entry, SW GTYPE_p_long_long.getCPtr( ds.data()),  ds, SW GTYPE_p_uns gned_char.getCPtr(code));
  }

  publ c vo d update_entry(long l st_no, long offset, long  d, SW GTYPE_p_uns gned_char code) {
    sw gfa ssJN . nvertedL sts_update_entry(sw gCPtr, t , l st_no, offset,  d, SW GTYPE_p_uns gned_char.getCPtr(code));
  }

  publ c vo d update_entr es(long l st_no, long offset, long n_entry, LongVector  ds, SW GTYPE_p_uns gned_char code) {
    sw gfa ssJN . nvertedL sts_update_entr es(sw gCPtr, t , l st_no, offset, n_entry, SW GTYPE_p_long_long.getCPtr( ds.data()),  ds, SW GTYPE_p_uns gned_char.getCPtr(code));
  }

  publ c vo d res ze(long l st_no, long new_s ze) {
    sw gfa ssJN . nvertedL sts_res ze(sw gCPtr, t , l st_no, new_s ze);
  }

  publ c vo d reset() {
    sw gfa ssJN . nvertedL sts_reset(sw gCPtr, t );
  }

  publ c vo d  rge_from( nvertedL sts o vf, long add_ d) {
    sw gfa ssJN . nvertedL sts_ rge_from(sw gCPtr, t ,  nvertedL sts.getCPtr(o vf), o vf, add_ d);
  }

  publ c double  mbalance_factor() {
    return sw gfa ssJN . nvertedL sts_ mbalance_factor(sw gCPtr, t );
  }

  publ c vo d pr nt_stats() {
    sw gfa ssJN . nvertedL sts_pr nt_stats(sw gCPtr, t );
  }

  publ c long compute_ntotal() {
    return sw gfa ssJN . nvertedL sts_compute_ntotal(sw gCPtr, t );
  }

  stat c publ c class Scoped ds {
    pr vate trans ent long sw gCPtr;
    protected trans ent boolean sw gC mOwn;
  
    protected Scoped ds(long cPtr, boolean c moryOwn) {
      sw gC mOwn = c moryOwn;
      sw gCPtr = cPtr;
    }
  
    protected stat c long getCPtr(Scoped ds obj) {
      return (obj == null) ? 0 : obj.sw gCPtr;
    }
  
    @SuppressWarn ngs("deprecat on")
    protected vo d f nal ze() {
      delete();
    }
  
    publ c synchron zed vo d delete() {
       f (sw gCPtr != 0) {
         f (sw gC mOwn) {
          sw gC mOwn = false;
          sw gfa ssJN .delete_ nvertedL sts_Scoped ds(sw gCPtr);
        }
        sw gCPtr = 0;
      }
    }
  
    publ c vo d set l( nvertedL sts value) {
      sw gfa ssJN . nvertedL sts_Scoped ds_ l_set(sw gCPtr, t ,  nvertedL sts.getCPtr(value), value);
    }
  
    publ c  nvertedL sts get l() {
      long cPtr = sw gfa ssJN . nvertedL sts_Scoped ds_ l_get(sw gCPtr, t );
      return (cPtr == 0) ? null : new  nvertedL sts(cPtr, false);
    }
  
    publ c vo d set ds(LongVector value) {
      sw gfa ssJN . nvertedL sts_Scoped ds_ ds_set(sw gCPtr, t , SW GTYPE_p_long_long.getCPtr(value.data()), value);
    }
  
    publ c LongVector get ds() {
      return new LongVector(sw gfa ssJN . nvertedL sts_Scoped ds_ ds_get(sw gCPtr, t ), false);
  }
  
    publ c vo d setL st_no(long value) {
      sw gfa ssJN . nvertedL sts_Scoped ds_l st_no_set(sw gCPtr, t , value);
    }
  
    publ c long getL st_no() {
      return sw gfa ssJN . nvertedL sts_Scoped ds_l st_no_get(sw gCPtr, t );
    }
  
    publ c Scoped ds( nvertedL sts  l, long l st_no) {
      t (sw gfa ssJN .new_ nvertedL sts_Scoped ds( nvertedL sts.getCPtr( l),  l, l st_no), true);
    }
  
    publ c LongVector get() {
      return new LongVector(sw gfa ssJN . nvertedL sts_Scoped ds_get(sw gCPtr, t ), false);
  }
  
  }

  stat c publ c class ScopedCodes {
    pr vate trans ent long sw gCPtr;
    protected trans ent boolean sw gC mOwn;
  
    protected ScopedCodes(long cPtr, boolean c moryOwn) {
      sw gC mOwn = c moryOwn;
      sw gCPtr = cPtr;
    }
  
    protected stat c long getCPtr(ScopedCodes obj) {
      return (obj == null) ? 0 : obj.sw gCPtr;
    }
  
    @SuppressWarn ngs("deprecat on")
    protected vo d f nal ze() {
      delete();
    }
  
    publ c synchron zed vo d delete() {
       f (sw gCPtr != 0) {
         f (sw gC mOwn) {
          sw gC mOwn = false;
          sw gfa ssJN .delete_ nvertedL sts_ScopedCodes(sw gCPtr);
        }
        sw gCPtr = 0;
      }
    }
  
    publ c vo d set l( nvertedL sts value) {
      sw gfa ssJN . nvertedL sts_ScopedCodes_ l_set(sw gCPtr, t ,  nvertedL sts.getCPtr(value), value);
    }
  
    publ c  nvertedL sts get l() {
      long cPtr = sw gfa ssJN . nvertedL sts_ScopedCodes_ l_get(sw gCPtr, t );
      return (cPtr == 0) ? null : new  nvertedL sts(cPtr, false);
    }
  
    publ c vo d setCodes(SW GTYPE_p_uns gned_char value) {
      sw gfa ssJN . nvertedL sts_ScopedCodes_codes_set(sw gCPtr, t , SW GTYPE_p_uns gned_char.getCPtr(value));
    }
  
    publ c SW GTYPE_p_uns gned_char getCodes() {
      long cPtr = sw gfa ssJN . nvertedL sts_ScopedCodes_codes_get(sw gCPtr, t );
      return (cPtr == 0) ? null : new SW GTYPE_p_uns gned_char(cPtr, false);
    }
  
    publ c vo d setL st_no(long value) {
      sw gfa ssJN . nvertedL sts_ScopedCodes_l st_no_set(sw gCPtr, t , value);
    }
  
    publ c long getL st_no() {
      return sw gfa ssJN . nvertedL sts_ScopedCodes_l st_no_get(sw gCPtr, t );
    }
  
    publ c ScopedCodes( nvertedL sts  l, long l st_no) {
      t (sw gfa ssJN .new_ nvertedL sts_ScopedCodes__SW G_0( nvertedL sts.getCPtr( l),  l, l st_no), true);
    }
  
    publ c ScopedCodes( nvertedL sts  l, long l st_no, long offset) {
      t (sw gfa ssJN .new_ nvertedL sts_ScopedCodes__SW G_1( nvertedL sts.getCPtr( l),  l, l st_no, offset), true);
    }
  
    publ c SW GTYPE_p_uns gned_char get() {
      long cPtr = sw gfa ssJN . nvertedL sts_ScopedCodes_get(sw gCPtr, t );
      return (cPtr == 0) ? null : new SW GTYPE_p_uns gned_char(cPtr, false);
    }
  
  }

  publ c f nal stat c long  NVAL D_CODE_S ZE = sw gfa ssJN . nvertedL sts_ NVAL D_CODE_S ZE_get();
}
