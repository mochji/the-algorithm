/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class  ndex VFPQ extends  ndex VF {
  pr vate trans ent long sw gCPtr;

  protected  ndex VFPQ(long cPtr, boolean c moryOwn) {
    super(sw gfa ssJN . ndex VFPQ_SW GUpcast(cPtr), c moryOwn);
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr( ndex VFPQ obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_ ndex VFPQ(sw gCPtr);
      }
      sw gCPtr = 0;
    }
    super.delete();
  }

  publ c vo d setBy_res dual(boolean value) {
    sw gfa ssJN . ndex VFPQ_by_res dual_set(sw gCPtr, t , value);
  }

  publ c boolean getBy_res dual() {
    return sw gfa ssJN . ndex VFPQ_by_res dual_get(sw gCPtr, t );
  }

  publ c vo d setPq(ProductQuant zer value) {
    sw gfa ssJN . ndex VFPQ_pq_set(sw gCPtr, t , ProductQuant zer.getCPtr(value), value);
  }

  publ c ProductQuant zer getPq() {
    long cPtr = sw gfa ssJN . ndex VFPQ_pq_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new ProductQuant zer(cPtr, false);
  }

  publ c vo d setDo_polysemous_tra n ng(boolean value) {
    sw gfa ssJN . ndex VFPQ_do_polysemous_tra n ng_set(sw gCPtr, t , value);
  }

  publ c boolean getDo_polysemous_tra n ng() {
    return sw gfa ssJN . ndex VFPQ_do_polysemous_tra n ng_get(sw gCPtr, t );
  }

  publ c vo d setPolysemous_tra n ng(PolysemousTra n ng value) {
    sw gfa ssJN . ndex VFPQ_polysemous_tra n ng_set(sw gCPtr, t , PolysemousTra n ng.getCPtr(value), value);
  }

  publ c PolysemousTra n ng getPolysemous_tra n ng() {
    long cPtr = sw gfa ssJN . ndex VFPQ_polysemous_tra n ng_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new PolysemousTra n ng(cPtr, false);
  }

  publ c vo d setScan_table_threshold(long value) {
    sw gfa ssJN . ndex VFPQ_scan_table_threshold_set(sw gCPtr, t , value);
  }

  publ c long getScan_table_threshold() {
    return sw gfa ssJN . ndex VFPQ_scan_table_threshold_get(sw gCPtr, t );
  }

  publ c vo d setPolysemous_ht( nt value) {
    sw gfa ssJN . ndex VFPQ_polysemous_ht_set(sw gCPtr, t , value);
  }

  publ c  nt getPolysemous_ht() {
    return sw gfa ssJN . ndex VFPQ_polysemous_ht_get(sw gCPtr, t );
  }

  publ c vo d setUse_precomputed_table( nt value) {
    sw gfa ssJN . ndex VFPQ_use_precomputed_table_set(sw gCPtr, t , value);
  }

  publ c  nt getUse_precomputed_table() {
    return sw gfa ssJN . ndex VFPQ_use_precomputed_table_get(sw gCPtr, t );
  }

  publ c vo d setPrecomputed_table(SW GTYPE_p_Al gnedTableT_float_t value) {
    sw gfa ssJN . ndex VFPQ_precomputed_table_set(sw gCPtr, t , SW GTYPE_p_Al gnedTableT_float_t.getCPtr(value));
  }

  publ c SW GTYPE_p_Al gnedTableT_float_t getPrecomputed_table() {
    return new SW GTYPE_p_Al gnedTableT_float_t(sw gfa ssJN . ndex VFPQ_precomputed_table_get(sw gCPtr, t ), true);
  }

  publ c  ndex VFPQ( ndex quant zer, long d, long nl st, long M, long nb s_per_ dx,  tr cType  tr c) {
    t (sw gfa ssJN .new_ ndex VFPQ__SW G_0( ndex.getCPtr(quant zer), quant zer, d, nl st, M, nb s_per_ dx,  tr c.sw gValue()), true);
  }

  publ c  ndex VFPQ( ndex quant zer, long d, long nl st, long M, long nb s_per_ dx) {
    t (sw gfa ssJN .new_ ndex VFPQ__SW G_1( ndex.getCPtr(quant zer), quant zer, d, nl st, M, nb s_per_ dx), true);
  }

  publ c vo d encode_vectors(long n, SW GTYPE_p_float x, LongVector l st_nos, SW GTYPE_p_uns gned_char codes, boolean  nclude_l stnos) {
    sw gfa ssJN . ndex VFPQ_encode_vectors__SW G_0(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_long_long.getCPtr(l st_nos.data()), l st_nos, SW GTYPE_p_uns gned_char.getCPtr(codes),  nclude_l stnos);
  }

  publ c vo d encode_vectors(long n, SW GTYPE_p_float x, LongVector l st_nos, SW GTYPE_p_uns gned_char codes) {
    sw gfa ssJN . ndex VFPQ_encode_vectors__SW G_1(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_long_long.getCPtr(l st_nos.data()), l st_nos, SW GTYPE_p_uns gned_char.getCPtr(codes));
  }

  publ c vo d sa_decode(long n, SW GTYPE_p_uns gned_char bytes, SW GTYPE_p_float x) {
    sw gfa ssJN . ndex VFPQ_sa_decode(sw gCPtr, t , n, SW GTYPE_p_uns gned_char.getCPtr(bytes), SW GTYPE_p_float.getCPtr(x));
  }

  publ c vo d add_core(long n, SW GTYPE_p_float x, LongVector x ds, LongVector precomputed_ dx) {
    sw gfa ssJN . ndex VFPQ_add_core(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_long_long.getCPtr(x ds.data()), x ds, SW GTYPE_p_long_long.getCPtr(precomputed_ dx.data()), precomputed_ dx);
  }

  publ c vo d add_core_o(long n, SW GTYPE_p_float x, LongVector x ds, SW GTYPE_p_float res duals_2, LongVector precomputed_ dx) {
    sw gfa ssJN . ndex VFPQ_add_core_o__SW G_0(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_long_long.getCPtr(x ds.data()), x ds, SW GTYPE_p_float.getCPtr(res duals_2), SW GTYPE_p_long_long.getCPtr(precomputed_ dx.data()), precomputed_ dx);
  }

  publ c vo d add_core_o(long n, SW GTYPE_p_float x, LongVector x ds, SW GTYPE_p_float res duals_2) {
    sw gfa ssJN . ndex VFPQ_add_core_o__SW G_1(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_long_long.getCPtr(x ds.data()), x ds, SW GTYPE_p_float.getCPtr(res duals_2));
  }

  publ c vo d tra n_res dual(long n, SW GTYPE_p_float x) {
    sw gfa ssJN . ndex VFPQ_tra n_res dual(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x));
  }

  publ c vo d tra n_res dual_o(long n, SW GTYPE_p_float x, SW GTYPE_p_float res duals_2) {
    sw gfa ssJN . ndex VFPQ_tra n_res dual_o(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_float.getCPtr(res duals_2));
  }

  publ c vo d reconstruct_from_offset(long l st_no, long offset, SW GTYPE_p_float recons) {
    sw gfa ssJN . ndex VFPQ_reconstruct_from_offset(sw gCPtr, t , l st_no, offset, SW GTYPE_p_float.getCPtr(recons));
  }

  publ c long f nd_dupl cates(LongVector  ds, SW GTYPE_p_uns gned_long l ms) {
    return sw gfa ssJN . ndex VFPQ_f nd_dupl cates(sw gCPtr, t , SW GTYPE_p_long_long.getCPtr( ds.data()),  ds, SW GTYPE_p_uns gned_long.getCPtr(l ms));
  }

  publ c vo d encode(long key, SW GTYPE_p_float x, SW GTYPE_p_uns gned_char code) {
    sw gfa ssJN . ndex VFPQ_encode(sw gCPtr, t , key, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_uns gned_char.getCPtr(code));
  }

  publ c vo d encode_mult ple(long n, LongVector keys, SW GTYPE_p_float x, SW GTYPE_p_uns gned_char codes, boolean compute_keys) {
    sw gfa ssJN . ndex VFPQ_encode_mult ple__SW G_0(sw gCPtr, t , n, SW GTYPE_p_long_long.getCPtr(keys.data()), keys, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_uns gned_char.getCPtr(codes), compute_keys);
  }

  publ c vo d encode_mult ple(long n, LongVector keys, SW GTYPE_p_float x, SW GTYPE_p_uns gned_char codes) {
    sw gfa ssJN . ndex VFPQ_encode_mult ple__SW G_1(sw gCPtr, t , n, SW GTYPE_p_long_long.getCPtr(keys.data()), keys, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_uns gned_char.getCPtr(codes));
  }

  publ c vo d decode_mult ple(long n, LongVector keys, SW GTYPE_p_uns gned_char xcodes, SW GTYPE_p_float x) {
    sw gfa ssJN . ndex VFPQ_decode_mult ple(sw gCPtr, t , n, SW GTYPE_p_long_long.getCPtr(keys.data()), keys, SW GTYPE_p_uns gned_char.getCPtr(xcodes), SW GTYPE_p_float.getCPtr(x));
  }

  publ c SW GTYPE_p_fa ss__ nvertedL stScanner get_ nvertedL stScanner(boolean store_pa rs) {
    long cPtr = sw gfa ssJN . ndex VFPQ_get_ nvertedL stScanner(sw gCPtr, t , store_pa rs);
    return (cPtr == 0) ? null : new SW GTYPE_p_fa ss__ nvertedL stScanner(cPtr, false);
  }

  publ c vo d precompute_table() {
    sw gfa ssJN . ndex VFPQ_precompute_table(sw gCPtr, t );
  }

  publ c  ndex VFPQ() {
    t (sw gfa ssJN .new_ ndex VFPQ__SW G_2(), true);
  }

}
