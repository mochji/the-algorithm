/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class  ndexB naryFlat extends  ndexB nary {
  pr vate trans ent long sw gCPtr;

  protected  ndexB naryFlat(long cPtr, boolean c moryOwn) {
    super(sw gfa ssJN . ndexB naryFlat_SW GUpcast(cPtr), c moryOwn);
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr( ndexB naryFlat obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_ ndexB naryFlat(sw gCPtr);
      }
      sw gCPtr = 0;
    }
    super.delete();
  }

  publ c vo d setXb(ByteVector value) {
    sw gfa ssJN . ndexB naryFlat_xb_set(sw gCPtr, t , ByteVector.getCPtr(value), value);
  }

  publ c ByteVector getXb() {
    long cPtr = sw gfa ssJN . ndexB naryFlat_xb_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new ByteVector(cPtr, false);
  }

  publ c vo d setUse_ ap(boolean value) {
    sw gfa ssJN . ndexB naryFlat_use_ ap_set(sw gCPtr, t , value);
  }

  publ c boolean getUse_ ap() {
    return sw gfa ssJN . ndexB naryFlat_use_ ap_get(sw gCPtr, t );
  }

  publ c vo d setQuery_batch_s ze(long value) {
    sw gfa ssJN . ndexB naryFlat_query_batch_s ze_set(sw gCPtr, t , value);
  }

  publ c long getQuery_batch_s ze() {
    return sw gfa ssJN . ndexB naryFlat_query_batch_s ze_get(sw gCPtr, t );
  }

  publ c  ndexB naryFlat(long d) {
    t (sw gfa ssJN .new_ ndexB naryFlat__SW G_0(d), true);
  }

  publ c vo d add(long n, SW GTYPE_p_uns gned_char x) {
    sw gfa ssJN . ndexB naryFlat_add(sw gCPtr, t , n, SW GTYPE_p_uns gned_char.getCPtr(x));
  }

  publ c vo d reset() {
    sw gfa ssJN . ndexB naryFlat_reset(sw gCPtr, t );
  }

  publ c vo d search(long n, SW GTYPE_p_uns gned_char x, long k, SW GTYPE_p_ nt d stances, LongVector labels) {
    sw gfa ssJN . ndexB naryFlat_search(sw gCPtr, t , n, SW GTYPE_p_uns gned_char.getCPtr(x), k, SW GTYPE_p_ nt.getCPtr(d stances), SW GTYPE_p_long_long.getCPtr(labels.data()), labels);
  }

  publ c vo d range_search(long n, SW GTYPE_p_uns gned_char x,  nt rad us, RangeSearchResult result) {
    sw gfa ssJN . ndexB naryFlat_range_search(sw gCPtr, t , n, SW GTYPE_p_uns gned_char.getCPtr(x), rad us, RangeSearchResult.getCPtr(result), result);
  }

  publ c vo d reconstruct(long key, SW GTYPE_p_uns gned_char recons) {
    sw gfa ssJN . ndexB naryFlat_reconstruct(sw gCPtr, t , key, SW GTYPE_p_uns gned_char.getCPtr(recons));
  }

  publ c long remove_ ds( DSelector sel) {
    return sw gfa ssJN . ndexB naryFlat_remove_ ds(sw gCPtr, t ,  DSelector.getCPtr(sel), sel);
  }

  publ c  ndexB naryFlat() {
    t (sw gfa ssJN .new_ ndexB naryFlat__SW G_1(), true);
  }

}
