/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class OnD sk nvertedL sts extends  nvertedL sts {
  pr vate trans ent long sw gCPtr;

  protected OnD sk nvertedL sts(long cPtr, boolean c moryOwn) {
    super(sw gfa ssJN .OnD sk nvertedL sts_SW GUpcast(cPtr), c moryOwn);
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(OnD sk nvertedL sts obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_OnD sk nvertedL sts(sw gCPtr);
      }
      sw gCPtr = 0;
    }
    super.delete();
  }

  publ c vo d setL sts(SW GTYPE_p_std__vectorT_fa ss__OnD skOneL st_t value) {
    sw gfa ssJN .OnD sk nvertedL sts_l sts_set(sw gCPtr, t , SW GTYPE_p_std__vectorT_fa ss__OnD skOneL st_t.getCPtr(value));
  }

  publ c SW GTYPE_p_std__vectorT_fa ss__OnD skOneL st_t getL sts() {
    long cPtr = sw gfa ssJN .OnD sk nvertedL sts_l sts_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new SW GTYPE_p_std__vectorT_fa ss__OnD skOneL st_t(cPtr, false);
  }

  stat c publ c class Slot {
    pr vate trans ent long sw gCPtr;
    protected trans ent boolean sw gC mOwn;
  
    protected Slot(long cPtr, boolean c moryOwn) {
      sw gC mOwn = c moryOwn;
      sw gCPtr = cPtr;
    }
  
    protected stat c long getCPtr(Slot obj) {
      return (obj == null) ? 0 : obj.sw gCPtr;
    }
  
    @SuppressWarn ngs("deprecat on")
    protected vo d f nal ze() {
      delete();
    }
  
    publ c synchron zed vo d delete() {
       f (sw gCPtr != 0) {
         f (sw gC mOwn) {
          sw gC mOwn = false;
          sw gfa ssJN .delete_OnD sk nvertedL sts_Slot(sw gCPtr);
        }
        sw gCPtr = 0;
      }
    }
  
    publ c vo d setOffset(long value) {
      sw gfa ssJN .OnD sk nvertedL sts_Slot_offset_set(sw gCPtr, t , value);
    }
  
    publ c long getOffset() {
      return sw gfa ssJN .OnD sk nvertedL sts_Slot_offset_get(sw gCPtr, t );
    }
  
    publ c vo d setCapac y(long value) {
      sw gfa ssJN .OnD sk nvertedL sts_Slot_capac y_set(sw gCPtr, t , value);
    }
  
    publ c long getCapac y() {
      return sw gfa ssJN .OnD sk nvertedL sts_Slot_capac y_get(sw gCPtr, t );
    }
  
    publ c Slot(long offset, long capac y) {
      t (sw gfa ssJN .new_OnD sk nvertedL sts_Slot__SW G_0(offset, capac y), true);
    }
  
    publ c Slot() {
      t (sw gfa ssJN .new_OnD sk nvertedL sts_Slot__SW G_1(), true);
    }
  
  }

  publ c vo d setSlots(SW GTYPE_p_std__l stT_fa ss__OnD sk nvertedL sts__Slot_t value) {
    sw gfa ssJN .OnD sk nvertedL sts_slots_set(sw gCPtr, t , SW GTYPE_p_std__l stT_fa ss__OnD sk nvertedL sts__Slot_t.getCPtr(value));
  }

  publ c SW GTYPE_p_std__l stT_fa ss__OnD sk nvertedL sts__Slot_t getSlots() {
    long cPtr = sw gfa ssJN .OnD sk nvertedL sts_slots_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new SW GTYPE_p_std__l stT_fa ss__OnD sk nvertedL sts__Slot_t(cPtr, false);
  }

  publ c vo d setF lena (Str ng value) {
    sw gfa ssJN .OnD sk nvertedL sts_f lena _set(sw gCPtr, t , value);
  }

  publ c Str ng getF lena () {
    return sw gfa ssJN .OnD sk nvertedL sts_f lena _get(sw gCPtr, t );
  }

  publ c vo d setTots ze(long value) {
    sw gfa ssJN .OnD sk nvertedL sts_tots ze_set(sw gCPtr, t , value);
  }

  publ c long getTots ze() {
    return sw gfa ssJN .OnD sk nvertedL sts_tots ze_get(sw gCPtr, t );
  }

  publ c vo d setPtr(SW GTYPE_p_uns gned_char value) {
    sw gfa ssJN .OnD sk nvertedL sts_ptr_set(sw gCPtr, t , SW GTYPE_p_uns gned_char.getCPtr(value));
  }

  publ c SW GTYPE_p_uns gned_char getPtr() {
    long cPtr = sw gfa ssJN .OnD sk nvertedL sts_ptr_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new SW GTYPE_p_uns gned_char(cPtr, false);
  }

  publ c vo d setRead_only(boolean value) {
    sw gfa ssJN .OnD sk nvertedL sts_read_only_set(sw gCPtr, t , value);
  }

  publ c boolean getRead_only() {
    return sw gfa ssJN .OnD sk nvertedL sts_read_only_get(sw gCPtr, t );
  }

  publ c OnD sk nvertedL sts(long nl st, long code_s ze, Str ng f lena ) {
    t (sw gfa ssJN .new_OnD sk nvertedL sts__SW G_0(nl st, code_s ze, f lena ), true);
  }

  publ c long l st_s ze(long l st_no) {
    return sw gfa ssJN .OnD sk nvertedL sts_l st_s ze(sw gCPtr, t , l st_no);
  }

  publ c SW GTYPE_p_uns gned_char get_codes(long l st_no) {
    long cPtr = sw gfa ssJN .OnD sk nvertedL sts_get_codes(sw gCPtr, t , l st_no);
    return (cPtr == 0) ? null : new SW GTYPE_p_uns gned_char(cPtr, false);
  }

  publ c LongVector get_ ds(long l st_no) {
    return new LongVector(sw gfa ssJN .OnD sk nvertedL sts_get_ ds(sw gCPtr, t , l st_no), false);
}

  publ c long add_entr es(long l st_no, long n_entry, LongVector  ds, SW GTYPE_p_uns gned_char code) {
    return sw gfa ssJN .OnD sk nvertedL sts_add_entr es(sw gCPtr, t , l st_no, n_entry, SW GTYPE_p_long_long.getCPtr( ds.data()),  ds, SW GTYPE_p_uns gned_char.getCPtr(code));
  }

  publ c vo d update_entr es(long l st_no, long offset, long n_entry, LongVector  ds, SW GTYPE_p_uns gned_char code) {
    sw gfa ssJN .OnD sk nvertedL sts_update_entr es(sw gCPtr, t , l st_no, offset, n_entry, SW GTYPE_p_long_long.getCPtr( ds.data()),  ds, SW GTYPE_p_uns gned_char.getCPtr(code));
  }

  publ c vo d res ze(long l st_no, long new_s ze) {
    sw gfa ssJN .OnD sk nvertedL sts_res ze(sw gCPtr, t , l st_no, new_s ze);
  }

  publ c long  rge_from(SW GTYPE_p_p_fa ss__ nvertedL sts  ls,  nt n_ l, boolean verbose) {
    return sw gfa ssJN .OnD sk nvertedL sts_ rge_from__SW G_0(sw gCPtr, t , SW GTYPE_p_p_fa ss__ nvertedL sts.getCPtr( ls), n_ l, verbose);
  }

  publ c long  rge_from(SW GTYPE_p_p_fa ss__ nvertedL sts  ls,  nt n_ l) {
    return sw gfa ssJN .OnD sk nvertedL sts_ rge_from__SW G_1(sw gCPtr, t , SW GTYPE_p_p_fa ss__ nvertedL sts.getCPtr( ls), n_ l);
  }

  publ c long  rge_from_1( nvertedL sts  l, boolean verbose) {
    return sw gfa ssJN .OnD sk nvertedL sts_ rge_from_1__SW G_0(sw gCPtr, t ,  nvertedL sts.getCPtr( l),  l, verbose);
  }

  publ c long  rge_from_1( nvertedL sts  l) {
    return sw gfa ssJN .OnD sk nvertedL sts_ rge_from_1__SW G_1(sw gCPtr, t ,  nvertedL sts.getCPtr( l),  l);
  }

  publ c vo d crop_ nvl sts(long l0, long l1) {
    sw gfa ssJN .OnD sk nvertedL sts_crop_ nvl sts(sw gCPtr, t , l0, l1);
  }

  publ c vo d prefetch_l sts(LongVector l st_nos,  nt nl st) {
    sw gfa ssJN .OnD sk nvertedL sts_prefetch_l sts(sw gCPtr, t , SW GTYPE_p_long_long.getCPtr(l st_nos.data()), l st_nos, nl st);
  }

  publ c vo d setLocks(SW GTYPE_p_fa ss__LockLevels value) {
    sw gfa ssJN .OnD sk nvertedL sts_locks_set(sw gCPtr, t , SW GTYPE_p_fa ss__LockLevels.getCPtr(value));
  }

  publ c SW GTYPE_p_fa ss__LockLevels getLocks() {
    long cPtr = sw gfa ssJN .OnD sk nvertedL sts_locks_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new SW GTYPE_p_fa ss__LockLevels(cPtr, false);
  }

  publ c vo d setPf(SW GTYPE_p_fa ss__OnD sk nvertedL sts__Ongo ngPrefetch value) {
    sw gfa ssJN .OnD sk nvertedL sts_pf_set(sw gCPtr, t , SW GTYPE_p_fa ss__OnD sk nvertedL sts__Ongo ngPrefetch.getCPtr(value));
  }

  publ c SW GTYPE_p_fa ss__OnD sk nvertedL sts__Ongo ngPrefetch getPf() {
    long cPtr = sw gfa ssJN .OnD sk nvertedL sts_pf_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new SW GTYPE_p_fa ss__OnD sk nvertedL sts__Ongo ngPrefetch(cPtr, false);
  }

  publ c vo d setPrefetch_nthread( nt value) {
    sw gfa ssJN .OnD sk nvertedL sts_prefetch_nthread_set(sw gCPtr, t , value);
  }

  publ c  nt getPrefetch_nthread() {
    return sw gfa ssJN .OnD sk nvertedL sts_prefetch_nthread_get(sw gCPtr, t );
  }

  publ c vo d do_mmap() {
    sw gfa ssJN .OnD sk nvertedL sts_do_mmap(sw gCPtr, t );
  }

  publ c vo d update_tots ze(long new_tots ze) {
    sw gfa ssJN .OnD sk nvertedL sts_update_tots ze(sw gCPtr, t , new_tots ze);
  }

  publ c vo d res ze_locked(long l st_no, long new_s ze) {
    sw gfa ssJN .OnD sk nvertedL sts_res ze_locked(sw gCPtr, t , l st_no, new_s ze);
  }

  publ c long allocate_slot(long capac y) {
    return sw gfa ssJN .OnD sk nvertedL sts_allocate_slot(sw gCPtr, t , capac y);
  }

  publ c vo d free_slot(long offset, long capac y) {
    sw gfa ssJN .OnD sk nvertedL sts_free_slot(sw gCPtr, t , offset, capac y);
  }

  publ c vo d set_all_l sts_s zes(SW GTYPE_p_uns gned_long s zes) {
    sw gfa ssJN .OnD sk nvertedL sts_set_all_l sts_s zes(sw gCPtr, t , SW GTYPE_p_uns gned_long.getCPtr(s zes));
  }

  publ c OnD sk nvertedL sts() {
    t (sw gfa ssJN .new_OnD sk nvertedL sts__SW G_1(), true);
  }

}
