/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class ProductQuant zer {
  pr vate trans ent long sw gCPtr;
  protected trans ent boolean sw gC mOwn;

  protected ProductQuant zer(long cPtr, boolean c moryOwn) {
    sw gC mOwn = c moryOwn;
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(ProductQuant zer obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_ProductQuant zer(sw gCPtr);
      }
      sw gCPtr = 0;
    }
  }

  publ c vo d setD(long value) {
    sw gfa ssJN .ProductQuant zer_d_set(sw gCPtr, t , value);
  }

  publ c long getD() {
    return sw gfa ssJN .ProductQuant zer_d_get(sw gCPtr, t );
  }

  publ c vo d setM(long value) {
    sw gfa ssJN .ProductQuant zer_M_set(sw gCPtr, t , value);
  }

  publ c long getM() {
    return sw gfa ssJN .ProductQuant zer_M_get(sw gCPtr, t );
  }

  publ c vo d setNb s(long value) {
    sw gfa ssJN .ProductQuant zer_nb s_set(sw gCPtr, t , value);
  }

  publ c long getNb s() {
    return sw gfa ssJN .ProductQuant zer_nb s_get(sw gCPtr, t );
  }

  publ c vo d setDsub(long value) {
    sw gfa ssJN .ProductQuant zer_dsub_set(sw gCPtr, t , value);
  }

  publ c long getDsub() {
    return sw gfa ssJN .ProductQuant zer_dsub_get(sw gCPtr, t );
  }

  publ c vo d setCode_s ze(long value) {
    sw gfa ssJN .ProductQuant zer_code_s ze_set(sw gCPtr, t , value);
  }

  publ c long getCode_s ze() {
    return sw gfa ssJN .ProductQuant zer_code_s ze_get(sw gCPtr, t );
  }

  publ c vo d setKsub(long value) {
    sw gfa ssJN .ProductQuant zer_ksub_set(sw gCPtr, t , value);
  }

  publ c long getKsub() {
    return sw gfa ssJN .ProductQuant zer_ksub_get(sw gCPtr, t );
  }

  publ c vo d setVerbose(boolean value) {
    sw gfa ssJN .ProductQuant zer_verbose_set(sw gCPtr, t , value);
  }

  publ c boolean getVerbose() {
    return sw gfa ssJN .ProductQuant zer_verbose_get(sw gCPtr, t );
  }

  publ c vo d setTra n_type(ProductQuant zer.tra n_type_t value) {
    sw gfa ssJN .ProductQuant zer_tra n_type_set(sw gCPtr, t , value.sw gValue());
  }

  publ c ProductQuant zer.tra n_type_t getTra n_type() {
    return ProductQuant zer.tra n_type_t.sw gToEnum(sw gfa ssJN .ProductQuant zer_tra n_type_get(sw gCPtr, t ));
  }

  publ c vo d setCp(Cluster ngPara ters value) {
    sw gfa ssJN .ProductQuant zer_cp_set(sw gCPtr, t , Cluster ngPara ters.getCPtr(value), value);
  }

  publ c Cluster ngPara ters getCp() {
    long cPtr = sw gfa ssJN .ProductQuant zer_cp_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new Cluster ngPara ters(cPtr, false);
  }

  publ c vo d setAss gn_ ndex( ndex value) {
    sw gfa ssJN .ProductQuant zer_ass gn_ ndex_set(sw gCPtr, t ,  ndex.getCPtr(value), value);
  }

  publ c  ndex getAss gn_ ndex() {
    long cPtr = sw gfa ssJN .ProductQuant zer_ass gn_ ndex_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new  ndex(cPtr, false);
  }

  publ c vo d setCentro ds(FloatVector value) {
    sw gfa ssJN .ProductQuant zer_centro ds_set(sw gCPtr, t , FloatVector.getCPtr(value), value);
  }

  publ c FloatVector getCentro ds() {
    long cPtr = sw gfa ssJN .ProductQuant zer_centro ds_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new FloatVector(cPtr, false);
  }

  publ c SW GTYPE_p_float get_centro ds(long m, long  ) {
    long cPtr = sw gfa ssJN .ProductQuant zer_get_centro ds(sw gCPtr, t , m,  );
    return (cPtr == 0) ? null : new SW GTYPE_p_float(cPtr, false);
  }

  publ c vo d tra n( nt n, SW GTYPE_p_float x) {
    sw gfa ssJN .ProductQuant zer_tra n(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x));
  }

  publ c ProductQuant zer(long d, long M, long nb s) {
    t (sw gfa ssJN .new_ProductQuant zer__SW G_0(d, M, nb s), true);
  }

  publ c ProductQuant zer() {
    t (sw gfa ssJN .new_ProductQuant zer__SW G_1(), true);
  }

  publ c vo d set_der ved_values() {
    sw gfa ssJN .ProductQuant zer_set_der ved_values(sw gCPtr, t );
  }

  publ c vo d set_params(SW GTYPE_p_float centro ds,  nt m) {
    sw gfa ssJN .ProductQuant zer_set_params(sw gCPtr, t , SW GTYPE_p_float.getCPtr(centro ds), m);
  }

  publ c vo d compute_code(SW GTYPE_p_float x, SW GTYPE_p_uns gned_char code) {
    sw gfa ssJN .ProductQuant zer_compute_code(sw gCPtr, t , SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_uns gned_char.getCPtr(code));
  }

  publ c vo d compute_codes(SW GTYPE_p_float x, SW GTYPE_p_uns gned_char codes, long n) {
    sw gfa ssJN .ProductQuant zer_compute_codes(sw gCPtr, t , SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_uns gned_char.getCPtr(codes), n);
  }

  publ c vo d compute_codes_w h_ass gn_ ndex(SW GTYPE_p_float x, SW GTYPE_p_uns gned_char codes, long n) {
    sw gfa ssJN .ProductQuant zer_compute_codes_w h_ass gn_ ndex(sw gCPtr, t , SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_uns gned_char.getCPtr(codes), n);
  }

  publ c vo d decode(SW GTYPE_p_uns gned_char code, SW GTYPE_p_float x) {
    sw gfa ssJN .ProductQuant zer_decode__SW G_0(sw gCPtr, t , SW GTYPE_p_uns gned_char.getCPtr(code), SW GTYPE_p_float.getCPtr(x));
  }

  publ c vo d decode(SW GTYPE_p_uns gned_char code, SW GTYPE_p_float x, long n) {
    sw gfa ssJN .ProductQuant zer_decode__SW G_1(sw gCPtr, t , SW GTYPE_p_uns gned_char.getCPtr(code), SW GTYPE_p_float.getCPtr(x), n);
  }

  publ c vo d compute_code_from_d stance_table(SW GTYPE_p_float tab, SW GTYPE_p_uns gned_char code) {
    sw gfa ssJN .ProductQuant zer_compute_code_from_d stance_table(sw gCPtr, t , SW GTYPE_p_float.getCPtr(tab), SW GTYPE_p_uns gned_char.getCPtr(code));
  }

  publ c vo d compute_d stance_table(SW GTYPE_p_float x, SW GTYPE_p_float d s_table) {
    sw gfa ssJN .ProductQuant zer_compute_d stance_table(sw gCPtr, t , SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_float.getCPtr(d s_table));
  }

  publ c vo d compute_ nner_prod_table(SW GTYPE_p_float x, SW GTYPE_p_float d s_table) {
    sw gfa ssJN .ProductQuant zer_compute_ nner_prod_table(sw gCPtr, t , SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_float.getCPtr(d s_table));
  }

  publ c vo d compute_d stance_tables(long nx, SW GTYPE_p_float x, SW GTYPE_p_float d s_tables) {
    sw gfa ssJN .ProductQuant zer_compute_d stance_tables(sw gCPtr, t , nx, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_float.getCPtr(d s_tables));
  }

  publ c vo d compute_ nner_prod_tables(long nx, SW GTYPE_p_float x, SW GTYPE_p_float d s_tables) {
    sw gfa ssJN .ProductQuant zer_compute_ nner_prod_tables(sw gCPtr, t , nx, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_float.getCPtr(d s_tables));
  }

  publ c vo d search(SW GTYPE_p_float x, long nx, SW GTYPE_p_uns gned_char codes, long ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CMaxT_float_ nt64_t_t_t res, boolean  n _f nal ze_ ap) {
    sw gfa ssJN .ProductQuant zer_search__SW G_0(sw gCPtr, t , SW GTYPE_p_float.getCPtr(x), nx, SW GTYPE_p_uns gned_char.getCPtr(codes), ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CMaxT_float_ nt64_t_t_t.getCPtr(res),  n _f nal ze_ ap);
  }

  publ c vo d search(SW GTYPE_p_float x, long nx, SW GTYPE_p_uns gned_char codes, long ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CMaxT_float_ nt64_t_t_t res) {
    sw gfa ssJN .ProductQuant zer_search__SW G_1(sw gCPtr, t , SW GTYPE_p_float.getCPtr(x), nx, SW GTYPE_p_uns gned_char.getCPtr(codes), ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CMaxT_float_ nt64_t_t_t.getCPtr(res));
  }

  publ c vo d search_ p(SW GTYPE_p_float x, long nx, SW GTYPE_p_uns gned_char codes, long ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CM nT_float_ nt64_t_t_t res, boolean  n _f nal ze_ ap) {
    sw gfa ssJN .ProductQuant zer_search_ p__SW G_0(sw gCPtr, t , SW GTYPE_p_float.getCPtr(x), nx, SW GTYPE_p_uns gned_char.getCPtr(codes), ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CM nT_float_ nt64_t_t_t.getCPtr(res),  n _f nal ze_ ap);
  }

  publ c vo d search_ p(SW GTYPE_p_float x, long nx, SW GTYPE_p_uns gned_char codes, long ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CM nT_float_ nt64_t_t_t res) {
    sw gfa ssJN .ProductQuant zer_search_ p__SW G_1(sw gCPtr, t , SW GTYPE_p_float.getCPtr(x), nx, SW GTYPE_p_uns gned_char.getCPtr(codes), ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CM nT_float_ nt64_t_t_t.getCPtr(res));
  }

  publ c vo d setSdc_table(FloatVector value) {
    sw gfa ssJN .ProductQuant zer_sdc_table_set(sw gCPtr, t , FloatVector.getCPtr(value), value);
  }

  publ c FloatVector getSdc_table() {
    long cPtr = sw gfa ssJN .ProductQuant zer_sdc_table_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new FloatVector(cPtr, false);
  }

  publ c vo d compute_sdc_table() {
    sw gfa ssJN .ProductQuant zer_compute_sdc_table(sw gCPtr, t );
  }

  publ c vo d search_sdc(SW GTYPE_p_uns gned_char qcodes, long nq, SW GTYPE_p_uns gned_char bcodes, long ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CMaxT_float_ nt64_t_t_t res, boolean  n _f nal ze_ ap) {
    sw gfa ssJN .ProductQuant zer_search_sdc__SW G_0(sw gCPtr, t , SW GTYPE_p_uns gned_char.getCPtr(qcodes), nq, SW GTYPE_p_uns gned_char.getCPtr(bcodes), ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CMaxT_float_ nt64_t_t_t.getCPtr(res),  n _f nal ze_ ap);
  }

  publ c vo d search_sdc(SW GTYPE_p_uns gned_char qcodes, long nq, SW GTYPE_p_uns gned_char bcodes, long ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CMaxT_float_ nt64_t_t_t res) {
    sw gfa ssJN .ProductQuant zer_search_sdc__SW G_1(sw gCPtr, t , SW GTYPE_p_uns gned_char.getCPtr(qcodes), nq, SW GTYPE_p_uns gned_char.getCPtr(bcodes), ncodes, SW GTYPE_p_fa ss__ apArrayT_fa ss__CMaxT_float_ nt64_t_t_t.getCPtr(res));
  }

  publ c f nal stat c class tra n_type_t {
    publ c f nal stat c ProductQuant zer.tra n_type_t Tra n_default = new ProductQuant zer.tra n_type_t("Tra n_default");
    publ c f nal stat c ProductQuant zer.tra n_type_t Tra n_hot_start = new ProductQuant zer.tra n_type_t("Tra n_hot_start");
    publ c f nal stat c ProductQuant zer.tra n_type_t Tra n_shared = new ProductQuant zer.tra n_type_t("Tra n_shared");
    publ c f nal stat c ProductQuant zer.tra n_type_t Tra n_hypercube = new ProductQuant zer.tra n_type_t("Tra n_hypercube");
    publ c f nal stat c ProductQuant zer.tra n_type_t Tra n_hypercube_pca = new ProductQuant zer.tra n_type_t("Tra n_hypercube_pca");

    publ c f nal  nt sw gValue() {
      return sw gValue;
    }

    publ c Str ng toStr ng() {
      return sw gNa ;
    }

    publ c stat c tra n_type_t sw gToEnum( nt sw gValue) {
       f (sw gValue < sw gValues.length && sw gValue >= 0 && sw gValues[sw gValue].sw gValue == sw gValue)
        return sw gValues[sw gValue];
      for ( nt   = 0;   < sw gValues.length;  ++)
         f (sw gValues[ ].sw gValue == sw gValue)
          return sw gValues[ ];
      throw new  llegalArgu ntExcept on("No enum " + tra n_type_t.class + " w h value " + sw gValue);
    }

    pr vate tra n_type_t(Str ng sw gNa ) {
      t .sw gNa  = sw gNa ;
      t .sw gValue = sw gNext++;
    }

    pr vate tra n_type_t(Str ng sw gNa ,  nt sw gValue) {
      t .sw gNa  = sw gNa ;
      t .sw gValue = sw gValue;
      sw gNext = sw gValue+1;
    }

    pr vate tra n_type_t(Str ng sw gNa , tra n_type_t sw gEnum) {
      t .sw gNa  = sw gNa ;
      t .sw gValue = sw gEnum.sw gValue;
      sw gNext = t .sw gValue+1;
    }

    pr vate stat c tra n_type_t[] sw gValues = { Tra n_default, Tra n_hot_start, Tra n_shared, Tra n_hypercube, Tra n_hypercube_pca };
    pr vate stat c  nt sw gNext = 0;
    pr vate f nal  nt sw gValue;
    pr vate f nal Str ng sw gNa ;
  }

}
