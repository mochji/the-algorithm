/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class  ndex VFFlatDedup extends  ndex VFFlat {
  pr vate trans ent long sw gCPtr;

  protected  ndex VFFlatDedup(long cPtr, boolean c moryOwn) {
    super(sw gfa ssJN . ndex VFFlatDedup_SW GUpcast(cPtr), c moryOwn);
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr( ndex VFFlatDedup obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_ ndex VFFlatDedup(sw gCPtr);
      }
      sw gCPtr = 0;
    }
    super.delete();
  }

  publ c vo d set nstances(SW GTYPE_p_std__unordered_mult mapT_ nt64_t_ nt64_t_t value) {
    sw gfa ssJN . ndex VFFlatDedup_ nstances_set(sw gCPtr, t , SW GTYPE_p_std__unordered_mult mapT_ nt64_t_ nt64_t_t.getCPtr(value));
  }

  publ c SW GTYPE_p_std__unordered_mult mapT_ nt64_t_ nt64_t_t get nstances() {
    return new SW GTYPE_p_std__unordered_mult mapT_ nt64_t_ nt64_t_t(sw gfa ssJN . ndex VFFlatDedup_ nstances_get(sw gCPtr, t ), true);
  }

  publ c  ndex VFFlatDedup( ndex quant zer, long d, long nl st_,  tr cType arg3) {
    t (sw gfa ssJN .new_ ndex VFFlatDedup__SW G_0( ndex.getCPtr(quant zer), quant zer, d, nl st_, arg3.sw gValue()), true);
  }

  publ c  ndex VFFlatDedup( ndex quant zer, long d, long nl st_) {
    t (sw gfa ssJN .new_ ndex VFFlatDedup__SW G_1( ndex.getCPtr(quant zer), quant zer, d, nl st_), true);
  }

  publ c vo d tra n(long n, SW GTYPE_p_float x) {
    sw gfa ssJN . ndex VFFlatDedup_tra n(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x));
  }

  publ c vo d add_w h_ ds(long n, SW GTYPE_p_float x, LongVector x ds) {
    sw gfa ssJN . ndex VFFlatDedup_add_w h_ ds(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_long_long.getCPtr(x ds.data()), x ds);
  }

  publ c vo d search_preass gned(long n, SW GTYPE_p_float x, long k, LongVector ass gn, SW GTYPE_p_float centro d_d s, SW GTYPE_p_float d stances, LongVector labels, boolean store_pa rs,  VFSearchPara ters params,  ndex VFStats stats) {
    sw gfa ssJN . ndex VFFlatDedup_search_preass gned__SW G_0(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), k, SW GTYPE_p_long_long.getCPtr(ass gn.data()), ass gn, SW GTYPE_p_float.getCPtr(centro d_d s), SW GTYPE_p_float.getCPtr(d stances), SW GTYPE_p_long_long.getCPtr(labels.data()), labels, store_pa rs,  VFSearchPara ters.getCPtr(params), params,  ndex VFStats.getCPtr(stats), stats);
  }

  publ c vo d search_preass gned(long n, SW GTYPE_p_float x, long k, LongVector ass gn, SW GTYPE_p_float centro d_d s, SW GTYPE_p_float d stances, LongVector labels, boolean store_pa rs,  VFSearchPara ters params) {
    sw gfa ssJN . ndex VFFlatDedup_search_preass gned__SW G_1(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), k, SW GTYPE_p_long_long.getCPtr(ass gn.data()), ass gn, SW GTYPE_p_float.getCPtr(centro d_d s), SW GTYPE_p_float.getCPtr(d stances), SW GTYPE_p_long_long.getCPtr(labels.data()), labels, store_pa rs,  VFSearchPara ters.getCPtr(params), params);
  }

  publ c vo d search_preass gned(long n, SW GTYPE_p_float x, long k, LongVector ass gn, SW GTYPE_p_float centro d_d s, SW GTYPE_p_float d stances, LongVector labels, boolean store_pa rs) {
    sw gfa ssJN . ndex VFFlatDedup_search_preass gned__SW G_2(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), k, SW GTYPE_p_long_long.getCPtr(ass gn.data()), ass gn, SW GTYPE_p_float.getCPtr(centro d_d s), SW GTYPE_p_float.getCPtr(d stances), SW GTYPE_p_long_long.getCPtr(labels.data()), labels, store_pa rs);
  }

  publ c long remove_ ds( DSelector sel) {
    return sw gfa ssJN . ndex VFFlatDedup_remove_ ds(sw gCPtr, t ,  DSelector.getCPtr(sel), sel);
  }

  publ c vo d range_search(long n, SW GTYPE_p_float x, float rad us, RangeSearchResult result) {
    sw gfa ssJN . ndex VFFlatDedup_range_search(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), rad us, RangeSearchResult.getCPtr(result), result);
  }

  publ c vo d update_vectors( nt nv, LongVector  dx, SW GTYPE_p_float v) {
    sw gfa ssJN . ndex VFFlatDedup_update_vectors(sw gCPtr, t , nv, SW GTYPE_p_long_long.getCPtr( dx.data()),  dx, SW GTYPE_p_float.getCPtr(v));
  }

  publ c vo d reconstruct_from_offset(long l st_no, long offset, SW GTYPE_p_float recons) {
    sw gfa ssJN . ndex VFFlatDedup_reconstruct_from_offset(sw gCPtr, t , l st_no, offset, SW GTYPE_p_float.getCPtr(recons));
  }

  publ c  ndex VFFlatDedup() {
    t (sw gfa ssJN .new_ ndex VFFlatDedup__SW G_2(), true);
  }

}
