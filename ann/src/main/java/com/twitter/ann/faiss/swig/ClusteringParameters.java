/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class Cluster ngPara ters {
  pr vate trans ent long sw gCPtr;
  protected trans ent boolean sw gC mOwn;

  protected Cluster ngPara ters(long cPtr, boolean c moryOwn) {
    sw gC mOwn = c moryOwn;
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(Cluster ngPara ters obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_Cluster ngPara ters(sw gCPtr);
      }
      sw gCPtr = 0;
    }
  }

  publ c vo d setN er( nt value) {
    sw gfa ssJN .Cluster ngPara ters_n er_set(sw gCPtr, t , value);
  }

  publ c  nt getN er() {
    return sw gfa ssJN .Cluster ngPara ters_n er_get(sw gCPtr, t );
  }

  publ c vo d setNredo( nt value) {
    sw gfa ssJN .Cluster ngPara ters_nredo_set(sw gCPtr, t , value);
  }

  publ c  nt getNredo() {
    return sw gfa ssJN .Cluster ngPara ters_nredo_get(sw gCPtr, t );
  }

  publ c vo d setVerbose(boolean value) {
    sw gfa ssJN .Cluster ngPara ters_verbose_set(sw gCPtr, t , value);
  }

  publ c boolean getVerbose() {
    return sw gfa ssJN .Cluster ngPara ters_verbose_get(sw gCPtr, t );
  }

  publ c vo d setSp r cal(boolean value) {
    sw gfa ssJN .Cluster ngPara ters_sp r cal_set(sw gCPtr, t , value);
  }

  publ c boolean getSp r cal() {
    return sw gfa ssJN .Cluster ngPara ters_sp r cal_get(sw gCPtr, t );
  }

  publ c vo d set nt_centro ds(boolean value) {
    sw gfa ssJN .Cluster ngPara ters_ nt_centro ds_set(sw gCPtr, t , value);
  }

  publ c boolean get nt_centro ds() {
    return sw gfa ssJN .Cluster ngPara ters_ nt_centro ds_get(sw gCPtr, t );
  }

  publ c vo d setUpdate_ ndex(boolean value) {
    sw gfa ssJN .Cluster ngPara ters_update_ ndex_set(sw gCPtr, t , value);
  }

  publ c boolean getUpdate_ ndex() {
    return sw gfa ssJN .Cluster ngPara ters_update_ ndex_get(sw gCPtr, t );
  }

  publ c vo d setFrozen_centro ds(boolean value) {
    sw gfa ssJN .Cluster ngPara ters_frozen_centro ds_set(sw gCPtr, t , value);
  }

  publ c boolean getFrozen_centro ds() {
    return sw gfa ssJN .Cluster ngPara ters_frozen_centro ds_get(sw gCPtr, t );
  }

  publ c vo d setM n_po nts_per_centro d( nt value) {
    sw gfa ssJN .Cluster ngPara ters_m n_po nts_per_centro d_set(sw gCPtr, t , value);
  }

  publ c  nt getM n_po nts_per_centro d() {
    return sw gfa ssJN .Cluster ngPara ters_m n_po nts_per_centro d_get(sw gCPtr, t );
  }

  publ c vo d setMax_po nts_per_centro d( nt value) {
    sw gfa ssJN .Cluster ngPara ters_max_po nts_per_centro d_set(sw gCPtr, t , value);
  }

  publ c  nt getMax_po nts_per_centro d() {
    return sw gfa ssJN .Cluster ngPara ters_max_po nts_per_centro d_get(sw gCPtr, t );
  }

  publ c vo d setSeed( nt value) {
    sw gfa ssJN .Cluster ngPara ters_seed_set(sw gCPtr, t , value);
  }

  publ c  nt getSeed() {
    return sw gfa ssJN .Cluster ngPara ters_seed_get(sw gCPtr, t );
  }

  publ c vo d setDecode_block_s ze(long value) {
    sw gfa ssJN .Cluster ngPara ters_decode_block_s ze_set(sw gCPtr, t , value);
  }

  publ c long getDecode_block_s ze() {
    return sw gfa ssJN .Cluster ngPara ters_decode_block_s ze_get(sw gCPtr, t );
  }

  publ c Cluster ngPara ters() {
    t (sw gfa ssJN .new_Cluster ngPara ters(), true);
  }

}
