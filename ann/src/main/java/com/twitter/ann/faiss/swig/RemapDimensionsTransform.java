/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class RemapD  ns onsTransform extends VectorTransform {
  pr vate trans ent long sw gCPtr;

  protected RemapD  ns onsTransform(long cPtr, boolean c moryOwn) {
    super(sw gfa ssJN .RemapD  ns onsTransform_SW GUpcast(cPtr), c moryOwn);
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(RemapD  ns onsTransform obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_RemapD  ns onsTransform(sw gCPtr);
      }
      sw gCPtr = 0;
    }
    super.delete();
  }

  publ c vo d setMap( ntVector value) {
    sw gfa ssJN .RemapD  ns onsTransform_map_set(sw gCPtr, t ,  ntVector.getCPtr(value), value);
  }

  publ c  ntVector getMap() {
    long cPtr = sw gfa ssJN .RemapD  ns onsTransform_map_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new  ntVector(cPtr, false);
  }

  publ c RemapD  ns onsTransform( nt d_ n,  nt d_out, SW GTYPE_p_ nt map) {
    t (sw gfa ssJN .new_RemapD  ns onsTransform__SW G_0(d_ n, d_out, SW GTYPE_p_ nt.getCPtr(map)), true);
  }

  publ c RemapD  ns onsTransform( nt d_ n,  nt d_out, boolean un form) {
    t (sw gfa ssJN .new_RemapD  ns onsTransform__SW G_1(d_ n, d_out, un form), true);
  }

  publ c RemapD  ns onsTransform( nt d_ n,  nt d_out) {
    t (sw gfa ssJN .new_RemapD  ns onsTransform__SW G_2(d_ n, d_out), true);
  }

  publ c vo d apply_noalloc(long n, SW GTYPE_p_float x, SW GTYPE_p_float xt) {
    sw gfa ssJN .RemapD  ns onsTransform_apply_noalloc(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(x), SW GTYPE_p_float.getCPtr(xt));
  }

  publ c vo d reverse_transform(long n, SW GTYPE_p_float xt, SW GTYPE_p_float x) {
    sw gfa ssJN .RemapD  ns onsTransform_reverse_transform(sw gCPtr, t , n, SW GTYPE_p_float.getCPtr(xt), SW GTYPE_p_float.getCPtr(x));
  }

  publ c RemapD  ns onsTransform() {
    t (sw gfa ssJN .new_RemapD  ns onsTransform__SW G_3(), true);
  }

}
