/* ----------------------------------------------------------------------------
 * T  f le was automat cally generated by SW G (http://www.sw g.org).
 * Vers on 4.0.2
 *
 * Do not make changes to t  f le unless   know what   are do ng--mod fy
 * t  SW G  nterface f le  nstead.
 * ----------------------------------------------------------------------------- */

package com.tw ter.ann.fa ss;

publ c class AutoTuneCr er on {
  pr vate trans ent long sw gCPtr;
  protected trans ent boolean sw gC mOwn;

  protected AutoTuneCr er on(long cPtr, boolean c moryOwn) {
    sw gC mOwn = c moryOwn;
    sw gCPtr = cPtr;
  }

  protected stat c long getCPtr(AutoTuneCr er on obj) {
    return (obj == null) ? 0 : obj.sw gCPtr;
  }

  @SuppressWarn ngs("deprecat on")
  protected vo d f nal ze() {
    delete();
  }

  publ c synchron zed vo d delete() {
     f (sw gCPtr != 0) {
       f (sw gC mOwn) {
        sw gC mOwn = false;
        sw gfa ssJN .delete_AutoTuneCr er on(sw gCPtr);
      }
      sw gCPtr = 0;
    }
  }

  publ c vo d setNq(long value) {
    sw gfa ssJN .AutoTuneCr er on_nq_set(sw gCPtr, t , value);
  }

  publ c long getNq() {
    return sw gfa ssJN .AutoTuneCr er on_nq_get(sw gCPtr, t );
}

  publ c vo d setNnn(long value) {
    sw gfa ssJN .AutoTuneCr er on_nnn_set(sw gCPtr, t , value);
  }

  publ c long getNnn() {
    return sw gfa ssJN .AutoTuneCr er on_nnn_get(sw gCPtr, t );
}

  publ c vo d setGt_nnn(long value) {
    sw gfa ssJN .AutoTuneCr er on_gt_nnn_set(sw gCPtr, t , value);
  }

  publ c long getGt_nnn() {
    return sw gfa ssJN .AutoTuneCr er on_gt_nnn_get(sw gCPtr, t );
}

  publ c vo d setGt_D(FloatVector value) {
    sw gfa ssJN .AutoTuneCr er on_gt_D_set(sw gCPtr, t , FloatVector.getCPtr(value), value);
  }

  publ c FloatVector getGt_D() {
    long cPtr = sw gfa ssJN .AutoTuneCr er on_gt_D_get(sw gCPtr, t );
    return (cPtr == 0) ? null : new FloatVector(cPtr, false);
  }

  publ c vo d setGt_ (SW GTYPE_p_std__vectorT_ nt64_t_t value) {
    sw gfa ssJN .AutoTuneCr er on_gt_ _set(sw gCPtr, t , SW GTYPE_p_std__vectorT_ nt64_t_t.getCPtr(value));
  }

  publ c SW GTYPE_p_std__vectorT_ nt64_t_t getGt_ () {
    long cPtr = sw gfa ssJN .AutoTuneCr er on_gt_ _get(sw gCPtr, t );
    return (cPtr == 0) ? null : new SW GTYPE_p_std__vectorT_ nt64_t_t(cPtr, false);
  }

  publ c vo d set_groundtruth( nt gt_nnn, SW GTYPE_p_float gt_D_ n, LongVector gt_ _ n) {
    sw gfa ssJN .AutoTuneCr er on_set_groundtruth(sw gCPtr, t , gt_nnn, SW GTYPE_p_float.getCPtr(gt_D_ n), SW GTYPE_p_long_long.getCPtr(gt_ _ n.data()), gt_ _ n);
  }

  publ c double evaluate(SW GTYPE_p_float D, LongVector  ) {
    return sw gfa ssJN .AutoTuneCr er on_evaluate(sw gCPtr, t , SW GTYPE_p_float.getCPtr(D), SW GTYPE_p_long_long.getCPtr( .data()),  );
  }

}
