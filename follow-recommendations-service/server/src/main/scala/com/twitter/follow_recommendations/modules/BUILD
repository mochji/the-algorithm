scala_l brary(
    comp ler_opt on_sets = ["fatal_warn ngs"],
    platform = "java8",
    tags = ["bazel-compat ble"],
    dependenc es = [
        "3rdparty/jvm/com/google/ nject:gu ce",
        "3rdparty/jvm/com/google/ nject/extens ons:gu ce-ass sted nject",
        "3rdparty/jvm/javax/ nject:javax. nject",
        "3rdparty/jvm/net/cod ng ll:scala-gu ce",
        "3rdparty/jvm/org/slf4j:slf4j-ap ",
        "f natra- nternal/mtls-thr ftmux/src/ma n/scala",
        "f natra/ nject/ nject-core/src/ma n/scala",
        "follow-recom ndat ons-serv ce/common/src/ma n/scala/com/tw ter/follow_recom ndat ons/common/base",
        "follow-recom ndat ons-serv ce/common/src/ma n/scala/com/tw ter/follow_recom ndat ons/common/constants",
        "follow-recom ndat ons-serv ce/common/src/ma n/scala/com/tw ter/follow_recom ndat ons/common/transforms/mod fy_soc al_proof",
        "follow-recom ndat ons-serv ce/server/src/ma n/scala/com/tw ter/follow_recom ndat ons/conf gap ",
        "follow-recom ndat ons-serv ce/server/src/ma n/scala/com/tw ter/follow_recom ndat ons/products",
        "follow-recom ndat ons-serv ce/thr ft/src/ma n/thr ft:thr ft-scala",
        "product-m xer/core/src/ma n/scala/com/tw ter/product_m xer/core/product/gu ce",
        "product-m xer/core/src/ma n/scala/com/tw ter/product_m xer/core/product/reg stry",
        "twml/runt  /src/ma n/scala/com/tw ter/deepb rd/runt  /pred ct on_eng ne",
        "ut l/ut l-slf4j-ap /src/ma n/scala",
    ],
)
